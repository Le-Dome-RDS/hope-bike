

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 23 16:02:09 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0097                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  010C                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011A                     	;# 
    83  011B                     	;# 
    84  011D                     	;# 
    85  011D                     	;# 
    86  018C                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  020C                     	;# 
   108  0211                     	;# 
   109  0211                     	;# 
   110  0212                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0213                     	;# 
   114  0214                     	;# 
   115  0214                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0216                     	;# 
   120  0216                     	;# 
   121  0217                     	;# 
   122  0217                     	;# 
   123  0291                     	;# 
   124  0291                     	;# 
   125  0292                     	;# 
   126  0293                     	;# 
   127  0294                     	;# 
   128  0295                     	;# 
   129  0295                     	;# 
   130  0296                     	;# 
   131  0391                     	;# 
   132  0392                     	;# 
   133  0393                     	;# 
   134  039A                     	;# 
   135  039C                     	;# 
   136  039D                     	;# 
   137  039E                     	;# 
   138  039F                     	;# 
   139  0FE4                     	;# 
   140  0FE5                     	;# 
   141  0FE6                     	;# 
   142  0FE7                     	;# 
   143  0FE8                     	;# 
   144  0FE9                     	;# 
   145  0FEA                     	;# 
   146  0FEB                     	;# 
   147  0FED                     	;# 
   148  0FEE                     	;# 
   149  0FEF                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  008C                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  010C                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0115                     	;# 
   194  0116                     	;# 
   195  0117                     	;# 
   196  0118                     	;# 
   197  0119                     	;# 
   198  011A                     	;# 
   199  011B                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  0191                     	;# 
   204  0191                     	;# 
   205  0192                     	;# 
   206  0193                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0194                     	;# 
   210  0195                     	;# 
   211  0196                     	;# 
   212  0199                     	;# 
   213  019A                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019C                     	;# 
   219  019C                     	;# 
   220  019D                     	;# 
   221  019E                     	;# 
   222  019F                     	;# 
   223  020C                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0216                     	;# 
   236  0216                     	;# 
   237  0217                     	;# 
   238  0217                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0295                     	;# 
   245  0295                     	;# 
   246  0296                     	;# 
   247  0391                     	;# 
   248  0392                     	;# 
   249  0393                     	;# 
   250  039A                     	;# 
   251  039C                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0FE4                     	;# 
   256  0FE5                     	;# 
   257  0FE6                     	;# 
   258  0FE7                     	;# 
   259  0FE8                     	;# 
   260  0FE9                     	;# 
   261  0FEA                     	;# 
   262  0FEB                     	;# 
   263  0FED                     	;# 
   264  0FEE                     	;# 
   265  0FEF                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  001A                     	;# 
   288  001B                     	;# 
   289  001C                     	;# 
   290  001E                     	;# 
   291  001F                     	;# 
   292  008C                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  010C                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  0118                     	;# 
   313  0119                     	;# 
   314  011A                     	;# 
   315  011B                     	;# 
   316  011D                     	;# 
   317  011D                     	;# 
   318  018C                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020C                     	;# 
   340  0211                     	;# 
   341  0211                     	;# 
   342  0212                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  0291                     	;# 
   356  0291                     	;# 
   357  0292                     	;# 
   358  0293                     	;# 
   359  0294                     	;# 
   360  0295                     	;# 
   361  0295                     	;# 
   362  0296                     	;# 
   363  0391                     	;# 
   364  0392                     	;# 
   365  0393                     	;# 
   366  039A                     	;# 
   367  039C                     	;# 
   368  039D                     	;# 
   369  039E                     	;# 
   370  039F                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0095                     	;# 
   412  0096                     	;# 
   413  0097                     	;# 
   414  0098                     	;# 
   415  0099                     	;# 
   416  009A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  010C                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011A                     	;# 
   431  011B                     	;# 
   432  011D                     	;# 
   433  011D                     	;# 
   434  018C                     	;# 
   435  0191                     	;# 
   436  0191                     	;# 
   437  0192                     	;# 
   438  0193                     	;# 
   439  0193                     	;# 
   440  0193                     	;# 
   441  0194                     	;# 
   442  0195                     	;# 
   443  0196                     	;# 
   444  0199                     	;# 
   445  019A                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019B                     	;# 
   450  019C                     	;# 
   451  019C                     	;# 
   452  019D                     	;# 
   453  019E                     	;# 
   454  019F                     	;# 
   455  020C                     	;# 
   456  0211                     	;# 
   457  0211                     	;# 
   458  0212                     	;# 
   459  0212                     	;# 
   460  0213                     	;# 
   461  0213                     	;# 
   462  0214                     	;# 
   463  0214                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0216                     	;# 
   468  0216                     	;# 
   469  0217                     	;# 
   470  0217                     	;# 
   471  0291                     	;# 
   472  0291                     	;# 
   473  0292                     	;# 
   474  0293                     	;# 
   475  0294                     	;# 
   476  0295                     	;# 
   477  0295                     	;# 
   478  0296                     	;# 
   479  0391                     	;# 
   480  0392                     	;# 
   481  0393                     	;# 
   482  039A                     	;# 
   483  039C                     	;# 
   484  039D                     	;# 
   485  039E                     	;# 
   486  039F                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  008C                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  010C                     	;# 
   539  0111                     	;# 
   540  0112                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011A                     	;# 
   547  011B                     	;# 
   548  011D                     	;# 
   549  011D                     	;# 
   550  018C                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020C                     	;# 
   572  0211                     	;# 
   573  0211                     	;# 
   574  0212                     	;# 
   575  0212                     	;# 
   576  0213                     	;# 
   577  0213                     	;# 
   578  0214                     	;# 
   579  0214                     	;# 
   580  0215                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0216                     	;# 
   584  0216                     	;# 
   585  0217                     	;# 
   586  0217                     	;# 
   587  0291                     	;# 
   588  0291                     	;# 
   589  0292                     	;# 
   590  0293                     	;# 
   591  0294                     	;# 
   592  0295                     	;# 
   593  0295                     	;# 
   594  0296                     	;# 
   595  0391                     	;# 
   596  0392                     	;# 
   597  0393                     	;# 
   598  039A                     	;# 
   599  039C                     	;# 
   600  039D                     	;# 
   601  039E                     	;# 
   602  039F                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  008C                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  0111                     	;# 
   656  0112                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0118                     	;# 
   661  0119                     	;# 
   662  011A                     	;# 
   663  011B                     	;# 
   664  011D                     	;# 
   665  011D                     	;# 
   666  018C                     	;# 
   667  0191                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0193                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0194                     	;# 
   674  0195                     	;# 
   675  0196                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  019C                     	;# 
   684  019D                     	;# 
   685  019E                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0212                     	;# 
   692  0213                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0214                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0216                     	;# 
   701  0217                     	;# 
   702  0217                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0294                     	;# 
   708  0295                     	;# 
   709  0295                     	;# 
   710  0296                     	;# 
   711  0391                     	;# 
   712  0392                     	;# 
   713  0393                     	;# 
   714  039A                     	;# 
   715  039C                     	;# 
   716  039D                     	;# 
   717  039E                     	;# 
   718  039F                     	;# 
   719  0FE4                     	;# 
   720  0FE5                     	;# 
   721  0FE6                     	;# 
   722  0FE7                     	;# 
   723  0FE8                     	;# 
   724  0FE9                     	;# 
   725  0FEA                     	;# 
   726  0FEB                     	;# 
   727  0FED                     	;# 
   728  0FEE                     	;# 
   729  0FEF                     	;# 
   730  0000                     	;# 
   731  0001                     	;# 
   732  0002                     	;# 
   733  0003                     	;# 
   734  0004                     	;# 
   735  0005                     	;# 
   736  0006                     	;# 
   737  0007                     	;# 
   738  0008                     	;# 
   739  0009                     	;# 
   740  000A                     	;# 
   741  000B                     	;# 
   742  000C                     	;# 
   743  0011                     	;# 
   744  0012                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0016                     	;# 
   748  0017                     	;# 
   749  0018                     	;# 
   750  0019                     	;# 
   751  001A                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001E                     	;# 
   755  001F                     	;# 
   756  008C                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  0111                     	;# 
   772  0112                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0117                     	;# 
   776  0118                     	;# 
   777  0119                     	;# 
   778  011A                     	;# 
   779  011B                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  018C                     	;# 
   783  0191                     	;# 
   784  0191                     	;# 
   785  0192                     	;# 
   786  0193                     	;# 
   787  0193                     	;# 
   788  0193                     	;# 
   789  0194                     	;# 
   790  0195                     	;# 
   791  0196                     	;# 
   792  0199                     	;# 
   793  019A                     	;# 
   794  019B                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019C                     	;# 
   799  019C                     	;# 
   800  019D                     	;# 
   801  019E                     	;# 
   802  019F                     	;# 
   803  020C                     	;# 
   804  0211                     	;# 
   805  0211                     	;# 
   806  0212                     	;# 
   807  0212                     	;# 
   808  0213                     	;# 
   809  0213                     	;# 
   810  0214                     	;# 
   811  0214                     	;# 
   812  0215                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0216                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0217                     	;# 
   819  0291                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0391                     	;# 
   828  0392                     	;# 
   829  0393                     	;# 
   830  039A                     	;# 
   831  039C                     	;# 
   832  039D                     	;# 
   833  039E                     	;# 
   834  039F                     	;# 
   835  0FE4                     	;# 
   836  0FE5                     	;# 
   837  0FE6                     	;# 
   838  0FE7                     	;# 
   839  0FE8                     	;# 
   840  0FE9                     	;# 
   841  0FEA                     	;# 
   842  0FEB                     	;# 
   843  0FED                     	;# 
   844  0FEE                     	;# 
   845  0FEF                     	;# 
   846                           
   847                           	psect	stringtext
   848  03B5                     __pstringtext:	
   849  03B5                     _sBioNetConf:	
   850  03B5  3402               	retlw	2
   851  03B6  34FF               	retlw	255
   852  03B7  3412               	retlw	18
   853  03B8  3407               	retlw	7
   854  03B9  34FF               	retlw	255
   855  03BA  3411               	retlw	17
   856  03BB  3408               	retlw	8
   857  03BC  3405               	retlw	5
   858  03BD  3411               	retlw	17
   859  03BE  340F               	retlw	15
   860  03BF  34FF               	retlw	255
   861  03C0  3412               	retlw	18
   862  03C1  3404               	retlw	4
   863  03C2                     __end_of_sBioNetConf:	
   864  000B                     _INTCON	set	11
   865  000C                     _PORTA	set	12
   866  008D                     _RCIF	set	141
   867  005D                     _TMR0IE	set	93
   868  005A                     _TMR0IF	set	90
   869  008C                     _TXIF	set	140
   870  009D                     _ADCON0	set	157
   871  009E                     _ADCON1	set	158
   872  009C                     _ADRESH	set	156
   873  009B                     _ADRESL	set	155
   874  0099                     _OSCCON	set	153
   875  04E9                     _ADGO	set	1257
   876  04E8                     _ADON	set	1256
   877  04A8                     _PS0	set	1192
   878  04A9                     _PS1	set	1193
   879  04AA                     _PS2	set	1194
   880  04AB                     _PSA	set	1195
   881  048D                     _RCIE	set	1165
   882  04AD                     _TMR0CS	set	1197
   883  0460                     _TRISA0	set	1120
   884  0462                     _TRISA2	set	1122
   885  048C                     _TXIE	set	1164
   886  08EF                     _RXDTSEL	set	2287
   887  08EA                     _TXCKSEL	set	2282
   888  0199                     _RCREG	set	409
   889  019C                     _SPBRGH	set	412
   890  019B                     _SPBRGL	set	411
   891  019A                     _TXREG	set	410
   892  0C60                     _ANSA0	set	3168
   893  0C61                     _ANSA1	set	3169
   894  0C62                     _ANSA2	set	3170
   895  0CFB                     _BRG16	set	3323
   896  0CF2                     _BRGH	set	3314
   897  0CEC                     _CREN	set	3308
   898  0CE9                     _OERR	set	3305
   899  0CEF                     _SPEN	set	3311
   900  0CF4                     _SYNC	set	3316
   901  0CF5                     _TXEN	set	3317
   902                           
   903                           ; #config settings
   904  0000                     
   905                           	psect	cinit
   906  004A                     start_initialization:	
   907  004A                     __initialization:	
   908                           
   909                           ; Clear objects allocated to BANK0
   910  004A  3020               	movlw	low __pbssBANK0
   911  004B  0084               	movwf	4
   912  004C  3000               	movlw	high __pbssBANK0
   913  004D  0085               	movwf	5
   914  004E  301E               	movlw	30
   915  004F  23E6               	fcall	clear_ram0
   916  0050                     end_of_initialization:	
   917                           ;End of C runtime variable initialization code
   918                           
   919  0050                     __end_of__initialization:	
   920  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   921  0051  0020               	movlb	0
   922  0052  297F               	ljmp	_main	;jump to C main() function
   923                           
   924                           	psect	bssBANK0
   925  0020                     __pbssBANK0:	
   926  0020                     _pVarConfDes:	
   927  0020                     	ds	2
   928  0022                     _u16CourantBatt:	
   929  0022                     	ds	2
   930  0024                     _u16TensionBatterie:	
   931  0024                     	ds	2
   932  0026                     _Tempo500ms:	
   933  0026                     	ds	1
   934  0027                     _bIsWriteFrame:	
   935  0027                     	ds	1
   936  0028                     _bNetworkCommand:	
   937  0028                     	ds	1
   938  0029                     _bNetworkCommandOK:	
   939  0029                     	ds	1
   940  002A                     _bNetworkReadOK:	
   941  002A                     	ds	1
   942  002B                     _bNetworkWriteOK:	
   943  002B                     	ds	1
   944  002C                     _bPedalageLevelPrev:	
   945  002C                     	ds	1
   946  002D                     _bRPMLevelPrev:	
   947  002D                     	ds	1
   948  002E                     _bRazFlagAllowed:	
   949  002E                     	ds	1
   950  002F                     _eBioNetStatus:	
   951  002F                     	ds	1
   952  0030                     _eDC22_AnaState:	
   953  0030                     	ds	1
   954  0031                     _u8IndexRx:	
   955  0031                     	ds	1
   956  0032                     _u8IndexTx:	
   957  0032                     	ds	1
   958  0033                     _u8Pedalage:	
   959  0033                     	ds	1
   960  0034                     _u8PedalageCpt:	
   961  0034                     	ds	1
   962  0035                     _u8Prescaler10ms:	
   963  0035                     	ds	1
   964  0036                     _u8RPM:	
   965  0036                     	ds	1
   966  0037                     _u8RPMCpt:	
   967  0037                     	ds	1
   968  0038                     _u8RxNoDelay:	
   969  0038                     	ds	1
   970  0039                     _u8TxFrameSize:	
   971  0039                     	ds	1
   972  003A                     _tu8BioNetBuff:	
   973  003A                     	ds	4
   974                           
   975                           	psect	clrtext
   976  03E6                     clear_ram0:	
   977                           ;	Called with FSR0 containing the base address, and
   978                           ;	WREG with the size to clear
   979                           
   980  03E6  0064               	clrwdt	;clear the watchdog before getting into this loop
   981  03E7                     clrloop0:	
   982  03E7  0180               	clrf	0	;clear RAM location pointed to by FSR
   983  03E8  3101               	addfsr 0,1
   984  03E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   985  03EA  2BE7               	goto	clrloop0	;have we reached the end yet?
   986  03EB  3400               	retlw	0	;all done for this memory range, return
   987                           
   988                           	psect	cstackCOMMON
   989  0070                     __pcstackCOMMON:	
   990  0070                     ?_BioNetRazFlag:	
   991  0070                     ?_DC24It10ms:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ??_DC24It10ms:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_BioNetRxInt:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_BioNetTxInt:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ??_BioNetTxInt:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_CalculChecksumAndSend:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_IsOKVarIsForUs:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_IsOKChecksum:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ??_IsOKChecksum:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_Hdw_AdcInit:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_DC22_AnaProcess:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_Hdw_AdcStartReadChannel:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_Hdw_AdcIsOkReadAna:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?_HdwUartInit:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ?_isr:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_BioNetInit:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ?_BioNetProcess:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ?_DC24HdwInit:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0070                     ?i1_BioNetRazFlag:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0070                     ??i1_BioNetRazFlag:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0070                     ?___wmul:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0070                     IsOk_CallBackWrite@u8VarRef:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057  0070                     ___wmul@multiplier:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x0
  1062  0070                     	ds	1
  1063  0071                     IsOKChecksum@u8CheckCpl:	
  1064                           
  1065                           ; 1 bytes @ 0x1
  1066  0071                     	ds	1
  1067  0072                     IsOKChecksum@u8Check:	
  1068  0072                     ___wmul@multiplicand:	
  1069                           ; 1 bytes @ 0x2
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x2
  1073  0072                     	ds	1
  1074  0073                     IsOKChecksum@u8SizeFrame:	
  1075                           
  1076                           ; 1 bytes @ 0x3
  1077  0073                     	ds	1
  1078  0074                     ??___wmul:	
  1079  0074                     IsOKChecksum@index:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     ___wmul@product:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x4
  1087  0074                     	ds	2
  1088  0076                     ??_IsOKVarIsForUs:	
  1089  0076                     ??_pGetVafConf:	
  1090                           ; 1 bytes @ 0x6
  1091                           
  1092  0076                     ?_pGetVafConf:	
  1093                           ; 1 bytes @ 0x6
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x6
  1097  0076                     	ds	2
  1098  0078                     IsOKVarIsForUs@VarRef:	
  1099                           
  1100                           ; 1 bytes @ 0x8
  1101  0078                     	ds	1
  1102  0079                     IsOKVarIsForUs@IsManagedByOurself:	
  1103                           
  1104                           ; 1 bytes @ 0x9
  1105  0079                     	ds	1
  1106  007A                     IsOKVarIsForUs@VarIdx:	
  1107                           
  1108                           ; 1 bytes @ 0xA
  1109  007A                     	ds	2
  1110  007C                     pGetVafConf@VarRef:	
  1111                           
  1112                           ; 1 bytes @ 0xC
  1113  007C                     	ds	1
  1114  007D                     pGetVafConf@idx:	
  1115                           
  1116                           ; 1 bytes @ 0xD
  1117  007D                     	ds	1
  1118                           
  1119                           	psect	cstackBANK0
  1120  003E                     __pcstackBANK0:	
  1121  003E                     ??_BioNetRxInt:	
  1122                           
  1123                           ; 1 bytes @ 0x0
  1124  003E                     	ds	3
  1125  0041                     BioNetRxInt@u8TxFrameSize:	
  1126                           
  1127                           ; 1 bytes @ 0x3
  1128  0041                     	ds	1
  1129  0042                     BioNetRxInt@u8CharBuf:	
  1130                           
  1131                           ; 1 bytes @ 0x4
  1132  0042                     	ds	1
  1133  0043                     ??_isr:	
  1134                           
  1135                           ; 1 bytes @ 0x5
  1136  0043                     	ds	2
  1137  0045                     ??_BioNetRazFlag:	
  1138  0045                     ??_CalculChecksumAndSend:	
  1139                           ; 1 bytes @ 0x7
  1140                           
  1141  0045                     ?_IsOk_CallBackRead:	
  1142                           ; 1 bytes @ 0x7
  1143                           
  1144  0045                     ?_IsOk_CallBackWrite:	
  1145                           ; 1 bytes @ 0x7
  1146                           
  1147  0045                     ??_Hdw_AdcInit:	
  1148                           ; 1 bytes @ 0x7
  1149                           
  1150  0045                     ??_Hdw_AdcStartReadChannel:	
  1151                           ; 1 bytes @ 0x7
  1152                           
  1153  0045                     ??_Hdw_AdcIsOkReadAna:	
  1154                           ; 1 bytes @ 0x7
  1155                           
  1156  0045                     ??_HdwUartInit:	
  1157                           ; 1 bytes @ 0x7
  1158                           
  1159  0045                     ??_BioNetInit:	
  1160                           ; 1 bytes @ 0x7
  1161                           
  1162  0045                     ??_DC24HdwInit:	
  1163                           ; 1 bytes @ 0x7
  1164                           
  1165  0045                     ?_Hdw_AdcReadAnaValue:	
  1166                           ; 1 bytes @ 0x7
  1167                           
  1168  0045                     IsOk_CallBackRead@pu8Buffer:	
  1169                           ; 2 bytes @ 0x7
  1170                           
  1171  0045                     IsOk_CallBackWrite@pu8Buffer:	
  1172                           ; 1 bytes @ 0x7
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x7
  1176  0045                     	ds	1
  1177  0046                     ??_IsOk_CallBackRead:	
  1178  0046                     ??_IsOk_CallBackWrite:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  0046                     CalculChecksumAndSend@u8Check:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0046                     IsOk_CallBackWrite@Result:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0046                     Hdw_AdcStartReadChannel@Channel:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x8
  1192  0046                     	ds	1
  1193  0047                     ??_Hdw_AdcReadAnaValue:	
  1194  0047                     CalculChecksumAndSend@u8SizeFrame:	
  1195                           ; 1 bytes @ 0x9
  1196                           
  1197  0047                     IsOk_CallBackRead@Result:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x9
  1202  0047                     	ds	1
  1203  0048                     CalculChecksumAndSend@index:	
  1204  0048                     IsOk_CallBackRead@u8VarRef:	
  1205                           ; 1 bytes @ 0xA
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0xA
  1209  0048                     	ds	1
  1210  0049                     ??_BioNetProcess:	
  1211  0049                     Hdw_AdcReadAnaValue@temp:	
  1212                           ; 1 bytes @ 0xB
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0xB
  1216  0049                     	ds	2
  1217  004B                     ??_DC22_AnaProcess:	
  1218                           
  1219                           ; 1 bytes @ 0xD
  1220  004B                     	ds	1
  1221  004C                     BioNetProcess@eBioNetStatusRx:	
  1222                           
  1223                           ; 1 bytes @ 0xE
  1224  004C                     	ds	1
  1225  004D                     ?_main:	
  1226  004D                     main@argc:	
  1227                           ; 2 bytes @ 0xF
  1228                           
  1229                           
  1230                           ; 2 bytes @ 0xF
  1231  004D                     	ds	2
  1232  004F                     main@argv:	
  1233                           
  1234                           ; 2 bytes @ 0x11
  1235  004F                     	ds	2
  1236  0051                     ??_main:	
  1237                           
  1238                           ; 1 bytes @ 0x13
  1239  0051                     	ds	1
  1240  0052                     main@u16TimerBas:	
  1241                           
  1242                           ; 2 bytes @ 0x14
  1243  0052                     	ds	2
  1244  0054                     main@u16TimerHaut:	
  1245                           
  1246                           ; 2 bytes @ 0x16
  1247  0054                     	ds	2
  1248  0056                     main@u16Compteur:	
  1249                           
  1250                           ; 2 bytes @ 0x18
  1251  0056                     	ds	2
  1252  0058                     main@u16CompteurDiv1000:	
  1253                           
  1254                           ; 2 bytes @ 0x1A
  1255  0058                     	ds	2
  1256  005A                     main@ValPort:	
  1257                           
  1258                           ; 1 bytes @ 0x1C
  1259  005A                     	ds	1
  1260                           
  1261                           	psect	maintext
  1262  017F                     __pmaintext:	
  1263 ;;
  1264 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1265 ;;
  1266 ;; *************** function _main *****************
  1267 ;; Defined at:
  1268 ;;		line 110 in file "DC22M_main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  argc            2   15[BANK0 ] int 
  1271 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  u16CompteurD    2   26[BANK0 ] unsigned int 
  1274 ;;  u16Compteur     2   24[BANK0 ] unsigned int 
  1275 ;;  u16TimerHaut    2   22[BANK0 ] unsigned int 
  1276 ;;  u16TimerBas     2   20[BANK0 ] unsigned int 
  1277 ;;  ValPort         1   28[BANK0 ] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2   15[BANK0 ] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : B1F/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1
  1287 ;;      Params:         0       4       0
  1288 ;;      Locals:         0       9       0
  1289 ;;      Temps:          0       1       0
  1290 ;;      Totals:         0      14       0
  1291 ;;Total ram usage:       14 bytes
  1292 ;; Hardware stack levels required when called:    6
  1293 ;; This function calls:
  1294 ;;		_BioNetInit
  1295 ;;		_BioNetProcess
  1296 ;;		_DC22_AnaProcess
  1297 ;;		_DC24HdwInit
  1298 ;;		_HdwUartInit
  1299 ;;		_Hdw_AdcInit
  1300 ;; This function is called by:
  1301 ;;		Startup code after reset
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _main
  1307  017F                     _main:	
  1308                           
  1309                           ;DC22M_main.c: 112: u8 ValPort;
  1310                           ;DC22M_main.c: 114: DC24HdwInit();
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1314  017F  23F2               	fcall	_DC24HdwInit
  1315                           
  1316                           ;DC22M_main.c: 115: Hdw_AdcInit();
  1317  0180  23C2               	fcall	_Hdw_AdcInit
  1318                           
  1319                           ;DC22M_main.c: 116: HdwUartInit();
  1320  0181  2385               	fcall	_HdwUartInit
  1321                           
  1322                           ;DC22M_main.c: 117: BioNetInit();
  1323  0182  23A6               	fcall	_BioNetInit
  1324                           
  1325                           ;DC22M_main.c: 123: u16 u16TimerBas=0;
  1326  0183  0020               	movlb	0	; select bank0
  1327  0184  01D2               	clrf	main@u16TimerBas
  1328  0185  01D3               	clrf	main@u16TimerBas+1
  1329                           
  1330                           ;DC22M_main.c: 124: u16 u16TimerHaut=0;
  1331  0186  01D4               	clrf	main@u16TimerHaut
  1332  0187  01D5               	clrf	main@u16TimerHaut+1
  1333                           
  1334                           ;DC22M_main.c: 126: u16 u16Compteur=0;
  1335  0188  01D6               	clrf	main@u16Compteur
  1336  0189  01D7               	clrf	main@u16Compteur+1
  1337                           
  1338                           ;DC22M_main.c: 127: u16 u16CompteurDiv1000=0;
  1339  018A  01D8               	clrf	main@u16CompteurDiv1000
  1340  018B  01D9               	clrf	main@u16CompteurDiv1000+1
  1341  018C                     l1778:	
  1342                           ;DC22M_main.c: 129: while (1)
  1343                           
  1344                           
  1345                           ;DC22M_main.c: 130: {
  1346                           ;DC22M_main.c: 131: BioNetProcess();
  1347  018C  2053               	fcall	_BioNetProcess
  1348                           
  1349                           ;DC22M_main.c: 141: DC22_AnaProcess();
  1350  018D  2227               	fcall	_DC22_AnaProcess
  1351                           
  1352                           ;DC22M_main.c: 142: u16Compteur++;
  1353  018E  3001               	movlw	1
  1354  018F  0020               	movlb	0	; select bank0
  1355  0190  07D6               	addwf	main@u16Compteur,f
  1356  0191  3000               	movlw	0
  1357  0192  3DD7               	addwfc	main@u16Compteur+1,f
  1358                           
  1359                           ;DC22M_main.c: 143: if (u16Compteur>1000){u16CompteurDiv1000++;u16Compteur=0;}
  1360  0193  3003               	movlw	3
  1361  0194  0257               	subwf	main@u16Compteur+1,w
  1362  0195  30E9               	movlw	233
  1363  0196  1903               	skipnz
  1364  0197  0256               	subwf	main@u16Compteur,w
  1365  0198  1C03               	skipc
  1366  0199  29A0               	goto	l1790
  1367  019A  3001               	movlw	1
  1368  019B  07D8               	addwf	main@u16CompteurDiv1000,f
  1369  019C  3000               	movlw	0
  1370  019D  3DD9               	addwfc	main@u16CompteurDiv1000+1,f
  1371  019E  01D6               	clrf	main@u16Compteur
  1372  019F  01D7               	clrf	main@u16Compteur+1
  1373  01A0                     l1790:	
  1374                           
  1375                           ;DC22M_main.c: 146: if (((PORTA & 0x08) == 0x08))
  1376  01A0  1D8C               	btfss	12,3	;volatile
  1377  01A1  29A5               	goto	l1794
  1378                           
  1379                           ;DC22M_main.c: 147: {
  1380                           ;DC22M_main.c: 148: ValPort=1;
  1381  01A2  01DA               	clrf	main@ValPort
  1382  01A3  0ADA               	incf	main@ValPort,f
  1383                           
  1384                           ;DC22M_main.c: 149: }
  1385  01A4  29A6               	goto	l1796
  1386  01A5                     l1794:	
  1387                           
  1388                           ;DC22M_main.c: 150: else
  1389                           ;DC22M_main.c: 151: {
  1390                           ;DC22M_main.c: 152: ValPort=0;
  1391  01A5  01DA               	clrf	main@ValPort
  1392  01A6                     l1796:	
  1393                           
  1394                           ;DC22M_main.c: 153: }
  1395                           ;DC22M_main.c: 156: if ( ValPort != bPedalageLevelPrev)
  1396  01A6  085A               	movf	main@ValPort,w
  1397  01A7  062C               	xorwf	_bPedalageLevelPrev,w
  1398  01A8  1903               	skipnz
  1399  01A9  29CA               	goto	l1814
  1400                           
  1401                           ;DC22M_main.c: 157: {
  1402                           ;DC22M_main.c: 158: if (ValPort==1) {
  1403  01AA  035A               	decf	main@ValPort,w
  1404  01AB  1D03               	btfss	3,2
  1405  01AC  29B1               	goto	l1802
  1406                           
  1407                           ;DC22M_main.c: 159: u16TimerBas=u16CompteurDiv1000;
  1408  01AD  0859               	movf	main@u16CompteurDiv1000+1,w
  1409  01AE  00D3               	movwf	main@u16TimerBas+1
  1410  01AF  0858               	movf	main@u16CompteurDiv1000,w
  1411  01B0  00D2               	movwf	main@u16TimerBas
  1412  01B1                     l1802:	
  1413                           
  1414                           ;DC22M_main.c: 160: }
  1415                           ;DC22M_main.c: 161: if (ValPort==0) {
  1416  01B1  085A               	movf	main@ValPort,w
  1417  01B2  1D03               	btfss	3,2
  1418  01B3  29B8               	goto	l1806
  1419                           
  1420                           ;DC22M_main.c: 162: u16TimerHaut=u16CompteurDiv1000;
  1421  01B4  0859               	movf	main@u16CompteurDiv1000+1,w
  1422  01B5  00D5               	movwf	main@u16TimerHaut+1
  1423  01B6  0858               	movf	main@u16CompteurDiv1000,w
  1424  01B7  00D4               	movwf	main@u16TimerHaut
  1425  01B8                     l1806:	
  1426                           
  1427                           ;DC22M_main.c: 163: }
  1428                           ;DC22M_main.c: 165: u16Compteur=0;
  1429  01B8  01D6               	clrf	main@u16Compteur
  1430  01B9  01D7               	clrf	main@u16Compteur+1
  1431                           
  1432                           ;DC22M_main.c: 166: u16CompteurDiv1000=0;
  1433  01BA  01D8               	clrf	main@u16CompteurDiv1000
  1434  01BB  01D9               	clrf	main@u16CompteurDiv1000+1
  1435                           
  1436                           ;DC22M_main.c: 167: if (u16TimerHaut>=u16TimerBas)
  1437  01BC  0853               	movf	main@u16TimerBas+1,w
  1438  01BD  0255               	subwf	main@u16TimerHaut+1,w
  1439  01BE  1D03               	skipz
  1440  01BF  29C2               	goto	u1535
  1441  01C0  0852               	movf	main@u16TimerBas,w
  1442  01C1  0254               	subwf	main@u16TimerHaut,w
  1443  01C2                     u1535:	
  1444  01C2  1C03               	skipc
  1445  01C3  29C9               	goto	l1812
  1446                           
  1447                           ;DC22M_main.c: 168: u8PedalageCpt++;
  1448  01C4  3001               	movlw	1
  1449  01C5  00D1               	movwf	??_main
  1450  01C6  0851               	movf	??_main,w
  1451  01C7  07B4               	addwf	_u8PedalageCpt,f
  1452  01C8  29CA               	goto	l1814
  1453  01C9                     l1812:	
  1454                           
  1455                           ;DC22M_main.c: 169: else u8PedalageCpt=0;
  1456  01C9  01B4               	clrf	_u8PedalageCpt
  1457  01CA                     l1814:	
  1458                           
  1459                           ;DC22M_main.c: 170: }
  1460                           ;DC22M_main.c: 171: bPedalageLevelPrev=ValPort;
  1461  01CA  085A               	movf	main@ValPort,w
  1462  01CB  00D1               	movwf	??_main
  1463  01CC  0851               	movf	??_main,w
  1464  01CD  00AC               	movwf	_bPedalageLevelPrev
  1465                           
  1466                           ;DC22M_main.c: 174: if (((PORTA & 0x02) == 0x02))
  1467  01CE  1C8C               	btfss	12,1	;volatile
  1468  01CF  29D3               	goto	l1820
  1469                           
  1470                           ;DC22M_main.c: 175: {
  1471                           ;DC22M_main.c: 176: ValPort=1;
  1472  01D0  01DA               	clrf	main@ValPort
  1473  01D1  0ADA               	incf	main@ValPort,f
  1474                           
  1475                           ;DC22M_main.c: 177: }
  1476  01D2  29D4               	goto	l1822
  1477  01D3                     l1820:	
  1478                           
  1479                           ;DC22M_main.c: 178: else
  1480                           ;DC22M_main.c: 179: {
  1481                           ;DC22M_main.c: 180: ValPort=0;
  1482  01D3  01DA               	clrf	main@ValPort
  1483  01D4                     l1822:	
  1484                           
  1485                           ;DC22M_main.c: 181: }
  1486                           ;DC22M_main.c: 184: if ( (ValPort == 1) && (bRPMLevelPrev==0))
  1487  01D4  035A               	decf	main@ValPort,w
  1488  01D5  1D03               	btfss	3,2
  1489  01D6  29DE               	goto	l1828
  1490  01D7  082D               	movf	_bRPMLevelPrev,w
  1491  01D8  1D03               	btfss	3,2
  1492  01D9  29DE               	goto	l1828
  1493                           
  1494                           ;DC22M_main.c: 185: {
  1495                           ;DC22M_main.c: 187: u8RPMCpt++;
  1496  01DA  3001               	movlw	1
  1497  01DB  00D1               	movwf	??_main
  1498  01DC  0851               	movf	??_main,w
  1499  01DD  07B7               	addwf	_u8RPMCpt,f
  1500  01DE                     l1828:	
  1501                           
  1502                           ;DC22M_main.c: 188: }
  1503                           ;DC22M_main.c: 190: bRPMLevelPrev=ValPort;
  1504  01DE  085A               	movf	main@ValPort,w
  1505  01DF  00D1               	movwf	??_main
  1506  01E0  0851               	movf	??_main,w
  1507  01E1  00AD               	movwf	_bRPMLevelPrev
  1508  01E2  298C               	goto	l1778
  1509  01E3                     __end_of_main:	
  1510                           
  1511                           	psect	text1
  1512  03C2                     __ptext1:	
  1513 ;; *************** function _Hdw_AdcInit *****************
  1514 ;; Defined at:
  1515 ;;		line 12 in file "Hdw_Adc.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1
  1529 ;;      Params:         0       0       0
  1530 ;;      Locals:         0       0       0
  1531 ;;      Temps:          0       0       0
  1532 ;;      Totals:         0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    4
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _Hdw_AdcInit
  1545  03C2                     _Hdw_AdcInit:	
  1546                           
  1547                           ;Hdw_Adc.c: 17: TRISA0=1;
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _Hdw_AdcInit: [wreg]
  1551  03C2  0021               	movlb	1	; select bank1
  1552  03C3  140C               	bsf	12,0	;volatile
  1553                           
  1554                           ;Hdw_Adc.c: 18: ANSA0=1;
  1555  03C4  0023               	movlb	3	; select bank3
  1556  03C5  140C               	bsf	12,0	;volatile
  1557                           
  1558                           ;Hdw_Adc.c: 21: TRISA2=1;
  1559  03C6  0021               	movlb	1	; select bank1
  1560  03C7  150C               	bsf	12,2	;volatile
  1561                           
  1562                           ;Hdw_Adc.c: 22: ANSA2=1;
  1563  03C8  0023               	movlb	3	; select bank3
  1564  03C9  150C               	bsf	12,2	;volatile
  1565                           
  1566                           ;Hdw_Adc.c: 24: ADCON1=0xA0;
  1567  03CA  30A0               	movlw	160
  1568  03CB  0021               	movlb	1	; select bank1
  1569  03CC  009E               	movwf	30	;volatile
  1570                           
  1571                           ;Hdw_Adc.c: 33: ADON=1;
  1572  03CD  141D               	bsf	29,0	;volatile
  1573  03CE  0008               	return
  1574  03CF                     __end_of_Hdw_AdcInit:	
  1575                           
  1576                           	psect	text2
  1577  0385                     __ptext2:	
  1578 ;; *************** function _HdwUartInit *****************
  1579 ;; Defined at:
  1580 ;;		line 15 in file "Hdw_Uart.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1
  1594 ;;      Params:         0       0       0
  1595 ;;      Locals:         0       0       0
  1596 ;;      Temps:          0       0       0
  1597 ;;      Totals:         0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    4
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _HdwUartInit
  1610  0385                     _HdwUartInit:	
  1611                           
  1612                           ;Hdw_Uart.c: 20: RXDTSEL=1;
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _HdwUartInit: [wreg]
  1616  0385  0022               	movlb	2	; select bank2
  1617  0386  179D               	bsf	29,7	;volatile
  1618                           
  1619                           ;Hdw_Uart.c: 21: TXCKSEL=1;
  1620  0387  151D               	bsf	29,2	;volatile
  1621                           
  1622                           ;Hdw_Uart.c: 25: SYNC=0;
  1623  0388  0023               	movlb	3	; select bank3
  1624  0389  121E               	bcf	30,4	;volatile
  1625                           
  1626                           ;Hdw_Uart.c: 26: BRG16=1;
  1627  038A  159F               	bsf	31,3	;volatile
  1628                           
  1629                           ;Hdw_Uart.c: 27: BRGH=1;
  1630  038B  151E               	bsf	30,2	;volatile
  1631                           
  1632                           ;Hdw_Uart.c: 30: SPBRGH= 0x1;
  1633  038C  3001               	movlw	1
  1634  038D  009C               	movwf	28	;volatile
  1635                           
  1636                           ;Hdw_Uart.c: 31: SPBRGL=0xA0;
  1637  038E  30A0               	movlw	160
  1638  038F  009B               	movwf	27	;volatile
  1639                           
  1640                           ;Hdw_Uart.c: 38: RCIE=1;
  1641  0390  0021               	movlb	1	; select bank1
  1642  0391  1691               	bsf	17,5	;volatile
  1643                           
  1644                           ;Hdw_Uart.c: 41: TXEN=1;
  1645  0392  0023               	movlb	3	; select bank3
  1646  0393  169E               	bsf	30,5	;volatile
  1647                           
  1648                           ;Hdw_Uart.c: 42: SPEN=1;
  1649  0394  179D               	bsf	29,7	;volatile
  1650                           
  1651                           ;Hdw_Uart.c: 43: CREN=1;
  1652  0395  161D               	bsf	29,4	;volatile
  1653  0396  0008               	return
  1654  0397                     __end_of_HdwUartInit:	
  1655                           
  1656                           	psect	text3
  1657  03F2                     __ptext3:	
  1658 ;; *************** function _DC24HdwInit *****************
  1659 ;; Defined at:
  1660 ;;		line 21 in file "DC22M_HdW.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		None
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1
  1674 ;;      Params:         0       0       0
  1675 ;;      Locals:         0       0       0
  1676 ;;      Temps:          0       0       0
  1677 ;;      Totals:         0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    4
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _DC24HdwInit
  1690  03F2                     _DC24HdwInit:	
  1691                           
  1692                           ;DC22M_HdW.c: 24: ANSA1=0;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _DC24HdwInit: []
  1696  03F2  0023               	movlb	3	; select bank3
  1697  03F3  108C               	bcf	12,1	;volatile
  1698  03F4  0008               	return
  1699  03F5                     __end_of_DC24HdwInit:	
  1700                           
  1701                           	psect	text4
  1702  0227                     __ptext4:	
  1703 ;; *************** function _DC22_AnaProcess *****************
  1704 ;; Defined at:
  1705 ;;		line 25 in file "DC22M_Ana.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1
  1719 ;;      Params:         0       0       0
  1720 ;;      Locals:         0       0       0
  1721 ;;      Temps:          0       1       0
  1722 ;;      Totals:         0       1       0
  1723 ;;Total ram usage:        1 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    5
  1726 ;; This function calls:
  1727 ;;		_Hdw_AdcIsOkReadAna
  1728 ;;		_Hdw_AdcReadAnaValue
  1729 ;;		_Hdw_AdcStartReadChannel
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _DC22_AnaProcess
  1737  0227                     _DC22_AnaProcess:	
  1738                           
  1739                           ;DC22M_Ana.c: 29: if (eDC22_AnaState==A_START_I)
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _DC22_AnaProcess: [wreg+status,2+status,0+pclath+cstack]
  1743  0227  0020               	movlb	0	; select bank0
  1744  0228  0830               	movf	_eDC22_AnaState,w
  1745  0229  1D03               	btfss	3,2
  1746  022A  2A31               	goto	l1704
  1747                           
  1748                           ;DC22M_Ana.c: 30: {
  1749                           ;DC22M_Ana.c: 31: Hdw_AdcStartReadChannel(2);
  1750  022B  3002               	movlw	2
  1751  022C  2397               	fcall	_Hdw_AdcStartReadChannel
  1752                           
  1753                           ;DC22M_Ana.c: 32: eDC22_AnaState=A_READ_I;
  1754  022D  0020               	movlb	0	; select bank0
  1755  022E  01B0               	clrf	_eDC22_AnaState
  1756  022F  0AB0               	incf	_eDC22_AnaState,f
  1757                           
  1758                           ;DC22M_Ana.c: 33: }
  1759  0230  0008               	return
  1760  0231                     l1704:	
  1761                           
  1762                           ;DC22M_Ana.c: 36: else if (eDC22_AnaState==A_READ_I)
  1763  0231  0330               	decf	_eDC22_AnaState,w
  1764  0232  1D03               	btfss	3,2
  1765  0233  2A43               	goto	l1712
  1766                           
  1767                           ;DC22M_Ana.c: 37: {
  1768                           ;DC22M_Ana.c: 39: if (Hdw_AdcIsOkReadAna())
  1769  0234  23DF               	fcall	_Hdw_AdcIsOkReadAna
  1770  0235  3A00               	xorlw	0
  1771  0236  1903               	skipnz
  1772  0237  0008               	return
  1773                           
  1774                           ;DC22M_Ana.c: 40: {
  1775                           ;DC22M_Ana.c: 43: u16CourantBatt=Hdw_AdcReadAnaValue();
  1776  0238  2322               	fcall	_Hdw_AdcReadAnaValue
  1777  0239  0020               	movlb	0	; select bank0
  1778  023A  0846               	movf	?_Hdw_AdcReadAnaValue+1,w
  1779  023B  00A3               	movwf	_u16CourantBatt+1
  1780  023C  0845               	movf	?_Hdw_AdcReadAnaValue,w
  1781  023D  00A2               	movwf	_u16CourantBatt
  1782                           
  1783                           ;DC22M_Ana.c: 45: eDC22_AnaState=A_START_BATT;
  1784  023E  3002               	movlw	2
  1785  023F  00CB               	movwf	??_DC22_AnaProcess
  1786  0240  084B               	movf	??_DC22_AnaProcess,w
  1787  0241  00B0               	movwf	_eDC22_AnaState
  1788                           
  1789                           ;DC22M_Ana.c: 46: }
  1790                           ;DC22M_Ana.c: 47: }
  1791  0242  0008               	return
  1792  0243                     l1712:	
  1793                           
  1794                           ;DC22M_Ana.c: 50: else if (eDC22_AnaState==A_START_BATT)
  1795  0243  3002               	movlw	2
  1796  0244  0630               	xorwf	_eDC22_AnaState,w
  1797  0245  1D03               	btfss	3,2
  1798  0246  2A4F               	goto	l1718
  1799                           
  1800                           ;DC22M_Ana.c: 51: {
  1801                           ;DC22M_Ana.c: 52: Hdw_AdcStartReadChannel(0);
  1802  0247  3000               	movlw	0
  1803  0248  2397               	fcall	_Hdw_AdcStartReadChannel
  1804                           
  1805                           ;DC22M_Ana.c: 54: eDC22_AnaState=A_READ_BATT;
  1806  0249  3003               	movlw	3
  1807  024A  0020               	movlb	0	; select bank0
  1808  024B  00CB               	movwf	??_DC22_AnaProcess
  1809  024C  084B               	movf	??_DC22_AnaProcess,w
  1810  024D  00B0               	movwf	_eDC22_AnaState
  1811                           
  1812                           ;DC22M_Ana.c: 55: }
  1813  024E  0008               	return
  1814  024F                     l1718:	
  1815                           
  1816                           ;DC22M_Ana.c: 57: else if (eDC22_AnaState==A_READ_BATT)
  1817  024F  3003               	movlw	3
  1818  0250  0630               	xorwf	_eDC22_AnaState,w
  1819  0251  1D03               	btfss	3,2
  1820  0252  0008               	return
  1821                           
  1822                           ;DC22M_Ana.c: 58: {
  1823                           ;DC22M_Ana.c: 61: if (Hdw_AdcIsOkReadAna())
  1824  0253  23DF               	fcall	_Hdw_AdcIsOkReadAna
  1825  0254  3A00               	xorlw	0
  1826  0255  1903               	skipnz
  1827  0256  0008               	return
  1828                           
  1829                           ;DC22M_Ana.c: 62: {
  1830                           ;DC22M_Ana.c: 63: u16TensionBatterie=Hdw_AdcReadAnaValue();
  1831  0257  2322               	fcall	_Hdw_AdcReadAnaValue
  1832  0258  0020               	movlb	0	; select bank0
  1833  0259  0846               	movf	?_Hdw_AdcReadAnaValue+1,w
  1834  025A  00A5               	movwf	_u16TensionBatterie+1
  1835  025B  0845               	movf	?_Hdw_AdcReadAnaValue,w
  1836  025C  00A4               	movwf	_u16TensionBatterie
  1837                           
  1838                           ;DC22M_Ana.c: 65: eDC22_AnaState=A_START_I;
  1839  025D  01B0               	clrf	_eDC22_AnaState
  1840  025E  0008               	return
  1841  025F                     __end_of_DC22_AnaProcess:	
  1842                           
  1843                           	psect	text5
  1844  0397                     __ptext5:	
  1845 ;; *************** function _Hdw_AdcStartReadChannel *****************
  1846 ;; Defined at:
  1847 ;;		line 42 in file "Hdw_Adc.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  Channel         1    wreg     unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  Channel         1    8[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1
  1861 ;;      Params:         0       0       0
  1862 ;;      Locals:         0       1       0
  1863 ;;      Temps:          0       1       0
  1864 ;;      Totals:         0       2       0
  1865 ;;Total ram usage:        2 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    4
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_DC22_AnaProcess
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _Hdw_AdcStartReadChannel
  1877  0397                     _Hdw_AdcStartReadChannel:	
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _Hdw_AdcStartReadChannel: [wreg+status,2+status,0]
  1881                           ;Hdw_AdcStartReadChannel@Channel stored from wreg
  1882  0397  0020               	movlb	0	; select bank0
  1883  0398  00C6               	movwf	Hdw_AdcStartReadChannel@Channel
  1884                           
  1885                           ;Hdw_Adc.c: 45: ADCON0=(Channel<<2)+1;
  1886  0399  0846               	movf	Hdw_AdcStartReadChannel@Channel,w
  1887  039A  00C5               	movwf	??_Hdw_AdcStartReadChannel
  1888  039B  3001               	movlw	1
  1889  039C                     u995:	
  1890  039C  35C5               	lslf	??_Hdw_AdcStartReadChannel,f
  1891  039D  3EFF               	addlw	-1
  1892  039E  1D03               	skipz
  1893  039F  2B9C               	goto	u995
  1894  03A0  3545               	lslf	??_Hdw_AdcStartReadChannel,w
  1895  03A1  3E01               	addlw	1
  1896  03A2  0021               	movlb	1	; select bank1
  1897  03A3  009D               	movwf	29	;volatile
  1898                           
  1899                           ;Hdw_Adc.c: 48: ADGO=1;
  1900  03A4  149D               	bsf	29,1	;volatile
  1901  03A5  0008               	return
  1902  03A6                     __end_of_Hdw_AdcStartReadChannel:	
  1903                           
  1904                           	psect	text6
  1905  0322                     __ptext6:	
  1906 ;; *************** function _Hdw_AdcReadAnaValue *****************
  1907 ;; Defined at:
  1908 ;;		line 73 in file "Hdw_Adc.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  temp            2   11[BANK0 ] unsigned int 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    7[BANK0 ] unsigned int 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1
  1922 ;;      Params:         0       2       0
  1923 ;;      Locals:         0       2       0
  1924 ;;      Temps:          0       2       0
  1925 ;;      Totals:         0       6       0
  1926 ;;Total ram usage:        6 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    4
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_DC22_AnaProcess
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function _Hdw_AdcReadAnaValue
  1938  0322                     _Hdw_AdcReadAnaValue:	
  1939                           
  1940                           ;Hdw_Adc.c: 75: u16 temp;
  1941                           ;Hdw_Adc.c: 76: temp = (u16)(ADRESH & 0x3);
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _Hdw_AdcReadAnaValue: [wreg+status,2]
  1945  0322  0021               	movlb	1	; select bank1
  1946  0323  081C               	movf	28,w	;volatile
  1947  0324  3903               	andlw	3
  1948  0325  0020               	movlb	0	; select bank0
  1949  0326  00C7               	movwf	??_Hdw_AdcReadAnaValue
  1950  0327  01C8               	clrf	??_Hdw_AdcReadAnaValue+1
  1951  0328  0847               	movf	??_Hdw_AdcReadAnaValue,w
  1952  0329  00C9               	movwf	Hdw_AdcReadAnaValue@temp
  1953  032A  0848               	movf	??_Hdw_AdcReadAnaValue+1,w
  1954  032B  00CA               	movwf	Hdw_AdcReadAnaValue@temp+1
  1955                           
  1956                           ;Hdw_Adc.c: 77: temp <<= 8;
  1957  032C  3008               	movlw	8
  1958  032D                     u1015:	
  1959  032D  35C9               	lslf	Hdw_AdcReadAnaValue@temp,f
  1960  032E  0DCA               	rlf	Hdw_AdcReadAnaValue@temp+1,f
  1961  032F  0B89               	decfsz	9,f
  1962  0330  2B2D               	goto	u1015
  1963                           
  1964                           ;Hdw_Adc.c: 78: temp += ADRESL;
  1965  0331  0021               	movlb	1	; select bank1
  1966  0332  081B               	movf	27,w	;volatile
  1967  0333  0020               	movlb	0	; select bank0
  1968  0334  00C7               	movwf	??_Hdw_AdcReadAnaValue
  1969  0335  01C8               	clrf	??_Hdw_AdcReadAnaValue+1
  1970  0336  0847               	movf	??_Hdw_AdcReadAnaValue,w
  1971  0337  07C9               	addwf	Hdw_AdcReadAnaValue@temp,f
  1972  0338  0848               	movf	??_Hdw_AdcReadAnaValue+1,w
  1973  0339  3DCA               	addwfc	Hdw_AdcReadAnaValue@temp+1,f
  1974                           
  1975                           ;Hdw_Adc.c: 80: return (temp);
  1976  033A  084A               	movf	Hdw_AdcReadAnaValue@temp+1,w
  1977  033B  00C6               	movwf	?_Hdw_AdcReadAnaValue+1
  1978  033C  0849               	movf	Hdw_AdcReadAnaValue@temp,w
  1979  033D  00C5               	movwf	?_Hdw_AdcReadAnaValue
  1980  033E  0008               	return
  1981  033F                     __end_of_Hdw_AdcReadAnaValue:	
  1982                           
  1983                           	psect	text7
  1984  03DF                     __ptext7:	
  1985 ;; *************** function _Hdw_AdcIsOkReadAna *****************
  1986 ;; Defined at:
  1987 ;;		line 55 in file "Hdw_Adc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      unsigned char 
  1994 ;; Registers used:
  1995 ;;		wreg
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1
  2001 ;;      Params:         0       0       0
  2002 ;;      Locals:         0       0       0
  2003 ;;      Temps:          0       0       0
  2004 ;;      Totals:         0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_DC22_AnaProcess
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _Hdw_AdcIsOkReadAna
  2017  03DF                     _Hdw_AdcIsOkReadAna:	
  2018                           
  2019                           ;Hdw_Adc.c: 58: if (ADGO==0)
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _Hdw_AdcIsOkReadAna: [wreg]
  2023  03DF  0021               	movlb	1	; select bank1
  2024  03E0  189D               	btfsc	29,1	;volatile
  2025  03E1  2BE4               	goto	l1494
  2026                           
  2027                           ;Hdw_Adc.c: 59: {
  2028                           ;Hdw_Adc.c: 60: return (1);
  2029  03E2  3001               	movlw	1
  2030                           
  2031                           ;Hdw_Adc.c: 61: }
  2032  03E3  0008               	return
  2033  03E4                     l1494:	
  2034                           
  2035                           ;Hdw_Adc.c: 62: else
  2036                           ;Hdw_Adc.c: 63: {
  2037                           ;Hdw_Adc.c: 64: return (0);
  2038  03E4  3000               	movlw	0
  2039  03E5  0008               	return
  2040  03E6                     __end_of_Hdw_AdcIsOkReadAna:	
  2041                           
  2042                           	psect	text8
  2043  0053                     __ptext8:	
  2044 ;; *************** function _BioNetProcess *****************
  2045 ;; Defined at:
  2046 ;;		line 114 in file "Bio-Net.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  eBioNetStatu    1   14[BANK0 ] enum E2376
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1
  2060 ;;      Params:         0       0       0
  2061 ;;      Locals:         0       1       0
  2062 ;;      Temps:          0       3       0
  2063 ;;      Totals:         0       4       0
  2064 ;;Total ram usage:        4 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    5
  2067 ;; This function calls:
  2068 ;;		_BioNetRazFlag
  2069 ;;		_CalculChecksumAndSend
  2070 ;;		_IsOk_CallBackRead
  2071 ;;		_IsOk_CallBackWrite
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _BioNetProcess
  2079  0053                     _BioNetProcess:	
  2080                           
  2081                           ;Bio-Net.c: 116: enum BioNetStatus eBioNetStatusRx;
  2082                           ;Bio-Net.c: 118: if (bNetworkCommandOK==1)
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _BioNetProcess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2086  0053  0020               	movlb	0	; select bank0
  2087  0054  0329               	decf	_bNetworkCommandOK,w
  2088  0055  1D03               	btfss	3,2
  2089  0056  2876               	goto	l1648
  2090                           
  2091                           ;Bio-Net.c: 119: {
  2092                           ;Bio-Net.c: 123: eBioNetStatusRx=tu8BioNetBuff[1];
  2093  0057  083B               	movf	_tu8BioNetBuff+1,w
  2094  0058  00C9               	movwf	??_BioNetProcess
  2095  0059  0849               	movf	??_BioNetProcess,w
  2096  005A  00CC               	movwf	BioNetProcess@eBioNetStatusRx
  2097                           
  2098                           ;Bio-Net.c: 124: if (eBioNetStatus == INIT)
  2099  005B  082F               	movf	_eBioNetStatus,w
  2100  005C  1903               	btfsc	3,2
  2101  005D  2868               	goto	l1638
  2102                           
  2103                           ;Bio-Net.c: 129: else if ((eBioNetStatus == RUN) && (eBioNetStatusRx != INIT))
  2104                           
  2105                           ;Bio-Net.c: 128: }
  2106                           
  2107                           ;Bio-Net.c: 125: {
  2108                           ;Bio-Net.c: 127: eBioNetStatus=eBioNetStatusRx;
  2109  005E  032F               	decf	_eBioNetStatus,w
  2110  005F  1D03               	btfss	3,2
  2111  0060  2864               	goto	l1636
  2112  0061  084C               	movf	BioNetProcess@eBioNetStatusRx,w
  2113  0062  1D03               	btfss	3,2
  2114  0063  2868               	goto	l1638
  2115  0064                     l1636:	
  2116                           ;Bio-Net.c: 133: }
  2117                           
  2118                           ;Bio-Net.c: 130: {
  2119                           ;Bio-Net.c: 132: eBioNetStatus=eBioNetStatusRx;
  2120                           
  2121                           
  2122                           ;Bio-Net.c: 134: else if (eBioNetStatus == STOP)
  2123  0064  3002               	movlw	2
  2124  0065  062F               	xorwf	_eBioNetStatus,w
  2125  0066  1D03               	btfss	3,2
  2126  0067  286D               	goto	l1640
  2127  0068                     l1638:	
  2128                           
  2129                           ;Bio-Net.c: 135: {
  2130                           ;Bio-Net.c: 137: eBioNetStatus=eBioNetStatusRx;
  2131  0068  084C               	movf	BioNetProcess@eBioNetStatusRx,w
  2132  0069  00C9               	movwf	??_BioNetProcess
  2133  006A  0849               	movf	??_BioNetProcess,w
  2134  006B  00AF               	movwf	_eBioNetStatus
  2135                           
  2136                           ;Bio-Net.c: 138: }
  2137  006C  2875               	goto	l1646
  2138  006D                     l1640:	
  2139                           
  2140                           ;Bio-Net.c: 139: else if ((eBioNetStatus == ERROR) && (eBioNetStatusRx == INIT))
  2141  006D  3003               	movlw	3
  2142  006E  062F               	xorwf	_eBioNetStatus,w
  2143  006F  1D03               	btfss	3,2
  2144  0070  2875               	goto	l1646
  2145  0071  084C               	movf	BioNetProcess@eBioNetStatusRx,w
  2146  0072  1D03               	btfss	3,2
  2147  0073  2875               	goto	l1646
  2148                           
  2149                           ;Bio-Net.c: 140: {
  2150                           ;Bio-Net.c: 142: eBioNetStatus=INIT;
  2151  0074  01AF               	clrf	_eBioNetStatus
  2152  0075                     l1646:	
  2153                           
  2154                           ;Bio-Net.c: 143: }
  2155                           ;Bio-Net.c: 144: BioNetRazFlag();
  2156  0075  23CF               	fcall	_BioNetRazFlag
  2157  0076                     l1648:	
  2158                           
  2159                           ;Bio-Net.c: 145: }
  2160                           ;Bio-Net.c: 147: if ( (eBioNetStatus == INIT) && bNetworkReadOK)
  2161  0076  0020               	movlb	0	; select bank0
  2162  0077  082F               	movf	_eBioNetStatus,w
  2163  0078  1D03               	btfss	3,2
  2164  0079  289F               	goto	l1658
  2165  007A  082A               	movf	_bNetworkReadOK,w
  2166  007B  1903               	btfsc	3,2
  2167  007C  289F               	goto	l1658
  2168                           
  2169                           ;Bio-Net.c: 148: {
  2170                           ;Bio-Net.c: 151: tu8BioNetBuff[1]=pVarConfDes->u8VarTypeSize;
  2171  007D  0821               	movf	_pVarConfDes+1,w
  2172  007E  00CA               	movwf	??_BioNetProcess+1
  2173  007F  0820               	movf	_pVarConfDes,w
  2174  0080  00C9               	movwf	??_BioNetProcess
  2175  0081  3002               	movlw	2
  2176  0082  0749               	addwf	??_BioNetProcess,w
  2177  0083  0084               	movwf	4
  2178  0084  084A               	movf	??_BioNetProcess+1,w
  2179  0085  1803               	skipnc
  2180  0086  0A4A               	incf	??_BioNetProcess+1,w
  2181  0087  0085               	movwf	5
  2182  0088  0800               	movf	0,w	;code access
  2183  0089  00CB               	movwf	??_BioNetProcess+2
  2184  008A  084B               	movf	??_BioNetProcess+2,w
  2185  008B  00BB               	movwf	_tu8BioNetBuff+1
  2186                           
  2187                           ;Bio-Net.c: 152: tu8BioNetBuff[2]=pVarConfDes->u8VarCycle;
  2188  008C  0821               	movf	_pVarConfDes+1,w
  2189  008D  00CA               	movwf	??_BioNetProcess+1
  2190  008E  0820               	movf	_pVarConfDes,w
  2191  008F  00C9               	movwf	??_BioNetProcess
  2192  0090  3001               	movlw	1
  2193  0091  0749               	addwf	??_BioNetProcess,w
  2194  0092  0084               	movwf	4
  2195  0093  084A               	movf	??_BioNetProcess+1,w
  2196  0094  1803               	skipnc
  2197  0095  0A4A               	incf	??_BioNetProcess+1,w
  2198  0096  0085               	movwf	5
  2199  0097  0800               	movf	0,w	;code access
  2200  0098  00CB               	movwf	??_BioNetProcess+2
  2201  0099  084B               	movf	??_BioNetProcess+2,w
  2202  009A  00BC               	movwf	_tu8BioNetBuff+2
  2203                           
  2204                           ;Bio-Net.c: 154: CalculChecksumAndSend(4);
  2205  009B  3004               	movlw	4
  2206  009C  225F               	fcall	_CalculChecksumAndSend
  2207                           
  2208                           ;Bio-Net.c: 155: bNetworkReadOK=0;
  2209  009D  0020               	movlb	0	; select bank0
  2210  009E  01AA               	clrf	_bNetworkReadOK
  2211  009F                     l1658:	
  2212                           
  2213                           ;Bio-Net.c: 156: }
  2214                           ;Bio-Net.c: 158: if ( eBioNetStatus == RUN || eBioNetStatus ==STOP)
  2215  009F  032F               	decf	_eBioNetStatus,w
  2216  00A0  1903               	btfsc	3,2
  2217  00A1  28A6               	goto	l1662
  2218  00A2  3002               	movlw	2
  2219  00A3  062F               	xorwf	_eBioNetStatus,w
  2220  00A4  1D03               	btfss	3,2
  2221  00A5  28E4               	goto	l1682
  2222  00A6                     l1662:	
  2223                           
  2224                           ;Bio-Net.c: 159: {
  2225                           ;Bio-Net.c: 161: if (bNetworkReadOK)
  2226  00A6  082A               	movf	_bNetworkReadOK,w
  2227  00A7  1903               	btfsc	3,2
  2228  00A8  28C8               	goto	l1670
  2229                           
  2230                           ;Bio-Net.c: 162: {
  2231                           ;Bio-Net.c: 164: if (IsOk_CallBackRead(pVarConfDes->u8VarRef,&tu8BioNetBuff[1]))
  2232  00A9  303B               	movlw	(low ((_tu8BioNetBuff| 0+1)))& (0+255)
  2233  00AA  00C9               	movwf	??_BioNetProcess
  2234  00AB  0849               	movf	??_BioNetProcess,w
  2235  00AC  00C5               	movwf	IsOk_CallBackRead@pu8Buffer
  2236  00AD  0820               	movf	_pVarConfDes,w
  2237  00AE  0084               	movwf	4
  2238  00AF  0821               	movf	_pVarConfDes+1,w
  2239  00B0  0085               	movwf	5
  2240  00B1  0800               	movf	0,w	;code access
  2241  00B2  2291               	fcall	_IsOk_CallBackRead
  2242  00B3  3A00               	xorlw	0
  2243  00B4  1903               	skipnz
  2244  00B5  28C8               	goto	l1670
  2245                           
  2246                           ;Bio-Net.c: 165: {
  2247                           ;Bio-Net.c: 168: CalculChecksumAndSend( (pVarConfDes->u8VarTypeSize & 0x0F) +2);
  2248  00B6  0020               	movlb	0	; select bank0
  2249  00B7  0821               	movf	_pVarConfDes+1,w
  2250  00B8  00CA               	movwf	??_BioNetProcess+1
  2251  00B9  0820               	movf	_pVarConfDes,w
  2252  00BA  00C9               	movwf	??_BioNetProcess
  2253  00BB  3002               	movlw	2
  2254  00BC  0749               	addwf	??_BioNetProcess,w
  2255  00BD  0084               	movwf	4
  2256  00BE  084A               	movf	??_BioNetProcess+1,w
  2257  00BF  1803               	skipnc
  2258  00C0  0A4A               	incf	??_BioNetProcess+1,w
  2259  00C1  0085               	movwf	5
  2260  00C2  0800               	movf	0,w	;code access
  2261  00C3  390F               	andlw	15
  2262  00C4  3E02               	addlw	2
  2263  00C5  225F               	fcall	_CalculChecksumAndSend
  2264                           
  2265                           ;Bio-Net.c: 169: bNetworkReadOK=0;
  2266  00C6  0020               	movlb	0	; select bank0
  2267  00C7  01AA               	clrf	_bNetworkReadOK
  2268  00C8                     l1670:	
  2269                           
  2270                           ;Bio-Net.c: 170: }
  2271                           ;Bio-Net.c: 171: }
  2272                           ;Bio-Net.c: 172: if (bNetworkWriteOK)
  2273  00C8  0020               	movlb	0	; select bank0
  2274  00C9  082B               	movf	_bNetworkWriteOK,w
  2275  00CA  1903               	btfsc	3,2
  2276  00CB  28E4               	goto	l1682
  2277                           
  2278                           ;Bio-Net.c: 173: {
  2279                           ;Bio-Net.c: 175: if (IsOk_CallBackWrite(pVarConfDes->u8VarRef,&tu8BioNetBuff[1]))
  2280  00CC  303B               	movlw	(low ((_tu8BioNetBuff| 0+1)))& (0+255)
  2281  00CD  00C9               	movwf	??_BioNetProcess
  2282  00CE  0849               	movf	??_BioNetProcess,w
  2283  00CF  00C5               	movwf	IsOk_CallBackWrite@pu8Buffer
  2284  00D0  0820               	movf	_pVarConfDes,w
  2285  00D1  0084               	movwf	4
  2286  00D2  0821               	movf	_pVarConfDes+1,w
  2287  00D3  0085               	movwf	5
  2288  00D4  0800               	movf	0,w	;code access
  2289  00D5  23EC               	fcall	_IsOk_CallBackWrite
  2290  00D6  3A00               	xorlw	0
  2291  00D7  1903               	skipnz
  2292  00D8  28DB               	goto	l1676
  2293                           
  2294                           ;Bio-Net.c: 176: {
  2295                           ;Bio-Net.c: 178: tu8BioNetBuff[0]=0xA5;
  2296  00D9  30A5               	movlw	165
  2297  00DA  28DC               	goto	L1
  2298  00DB                     l1676:	
  2299                           ;Bio-Net.c: 179: }
  2300                           
  2301                           
  2302                           ;Bio-Net.c: 180: else
  2303                           ;Bio-Net.c: 181: {
  2304                           ;Bio-Net.c: 183: tu8BioNetBuff[0]=0x33;
  2305  00DB  3033               	movlw	51
  2306  00DC                     L1:	
  2307  00DC  0020               	movlb	0	; select bank0
  2308  00DD  00C9               	movwf	??_BioNetProcess
  2309  00DE  0849               	movf	??_BioNetProcess,w
  2310  00DF  00BA               	movwf	_tu8BioNetBuff
  2311                           
  2312                           ;Bio-Net.c: 184: }
  2313                           ;Bio-Net.c: 185: CalculChecksumAndSend(1);
  2314  00E0  3001               	movlw	1
  2315  00E1  225F               	fcall	_CalculChecksumAndSend
  2316                           
  2317                           ;Bio-Net.c: 186: bNetworkWriteOK=0;
  2318  00E2  0020               	movlb	0	; select bank0
  2319  00E3  01AB               	clrf	_bNetworkWriteOK
  2320  00E4                     l1682:	
  2321                           
  2322                           ;Bio-Net.c: 187: }
  2323                           ;Bio-Net.c: 189: }
  2324                           ;Bio-Net.c: 191: if ( eBioNetStatus == ERROR )
  2325  00E4  3003               	movlw	3
  2326  00E5  062F               	xorwf	_eBioNetStatus,w
  2327  00E6  1D03               	btfss	3,2
  2328  00E7  0008               	return
  2329                           
  2330                           ;Bio-Net.c: 192: {
  2331                           ;Bio-Net.c: 195: if (bNetworkReadOK || bNetworkWriteOK)
  2332  00E8  082A               	movf	_bNetworkReadOK,w
  2333  00E9  1903               	btfsc	3,2
  2334  00EA  082B               	movf	_bNetworkWriteOK,w
  2335  00EB  1903               	btfsc	3,2
  2336  00EC  0008               	return
  2337                           
  2338                           ;Bio-Net.c: 196: {
  2339                           ;Bio-Net.c: 197: BioNetRazFlag();
  2340  00ED  23CF               	fcall	_BioNetRazFlag
  2341  00EE  0008               	return
  2342  00EF                     __end_of_BioNetProcess:	
  2343                           
  2344                           	psect	text9
  2345  03EC                     __ptext9:	
  2346 ;; *************** function _IsOk_CallBackWrite *****************
  2347 ;; Defined at:
  2348 ;;		line 80 in file "Bio-NetApp.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  u8VarRef        1    wreg     unsigned char 
  2351 ;;  pu8Buffer       1    7[BANK0 ] PTR unsigned char 
  2352 ;;		 -> tu8BioNetBuff(4), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  u8VarRef        1    0[COMMON] unsigned char 
  2355 ;;  Result          1    8[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1
  2365 ;;      Params:         0       1       0
  2366 ;;      Locals:         0       1       0
  2367 ;;      Temps:          0       0       0
  2368 ;;      Totals:         0       2       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    4
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_BioNetProcess
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _IsOk_CallBackWrite
  2381  03EC                     _IsOk_CallBackWrite:	
  2382                           
  2383                           ;Bio-NetApp.c: 82: boolean Result=1;
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _IsOk_CallBackWrite: [wreg+status,2]
  2387  03EC  0020               	movlb	0	; select bank0
  2388  03ED  01C6               	clrf	IsOk_CallBackWrite@Result
  2389  03EE  0AC6               	incf	IsOk_CallBackWrite@Result,f
  2390                           
  2391                           ;Bio-NetApp.c: 85: Result=0;
  2392  03EF  01C6               	clrf	IsOk_CallBackWrite@Result
  2393                           
  2394                           ;Bio-NetApp.c: 87: return (Result);
  2395  03F0  0846               	movf	IsOk_CallBackWrite@Result,w
  2396  03F1  0008               	return
  2397  03F2                     __end_of_IsOk_CallBackWrite:	
  2398                           
  2399                           	psect	text10
  2400  0291                     __ptext10:	
  2401 ;; *************** function _IsOk_CallBackRead *****************
  2402 ;; Defined at:
  2403 ;;		line 38 in file "Bio-NetApp.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  u8VarRef        1    wreg     unsigned char 
  2406 ;;  pu8Buffer       1    7[BANK0 ] PTR unsigned char 
  2407 ;;		 -> tu8BioNetBuff(4), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  u8VarRef        1   10[BANK0 ] unsigned char 
  2410 ;;  Result          1    9[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1
  2420 ;;      Params:         0       1       0
  2421 ;;      Locals:         0       2       0
  2422 ;;      Temps:          0       1       0
  2423 ;;      Totals:         0       4       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    4
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_BioNetProcess
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _IsOk_CallBackRead
  2436  0291                     _IsOk_CallBackRead:	
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _IsOk_CallBackRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  2440                           ;IsOk_CallBackRead@u8VarRef stored from wreg
  2441  0291  0020               	movlb	0	; select bank0
  2442  0292  00C8               	movwf	IsOk_CallBackRead@u8VarRef
  2443                           
  2444                           ;Bio-NetApp.c: 40: boolean Result=1;
  2445  0293  01C7               	clrf	IsOk_CallBackRead@Result
  2446  0294  0AC7               	incf	IsOk_CallBackRead@Result,f
  2447                           
  2448                           ;Bio-NetApp.c: 42: if (u8VarRef == 2)
  2449  0295  3002               	movlw	2
  2450  0296  0648               	xorwf	IsOk_CallBackRead@u8VarRef,w
  2451  0297  1D03               	btfss	3,2
  2452  0298  2AA1               	goto	l1380
  2453                           
  2454                           ;Bio-NetApp.c: 43: {
  2455                           ;Bio-NetApp.c: 45: *(u16 *)pu8Buffer = u16CourantBatt;
  2456  0299  0845               	movf	IsOk_CallBackRead@pu8Buffer,w
  2457  029A  0086               	movwf	6
  2458  029B  0187               	clrf	7
  2459  029C  0822               	movf	_u16CourantBatt,w
  2460  029D  3FC0               	movwi [0]fsr1
  2461  029E  0823               	movf	_u16CourantBatt+1,w
  2462  029F  3FC1               	movwi [1]fsr1
  2463                           
  2464                           ;Bio-NetApp.c: 46: }
  2465  02A0  2AC0               	goto	l1394
  2466  02A1                     l1380:	
  2467                           
  2468                           ;Bio-NetApp.c: 47: else if (u8VarRef == 7)
  2469  02A1  3007               	movlw	7
  2470  02A2  0648               	xorwf	IsOk_CallBackRead@u8VarRef,w
  2471  02A3  1D03               	btfss	3,2
  2472  02A4  2AA7               	goto	l1384
  2473                           
  2474                           ;Bio-NetApp.c: 48: {
  2475                           ;Bio-NetApp.c: 50: *pu8Buffer = u8Pedalage;
  2476  02A5  0833               	movf	_u8Pedalage,w
  2477  02A6  2AAC               	goto	L2
  2478  02A7                     l1384:	
  2479                           ;Bio-NetApp.c: 51: }
  2480                           
  2481                           
  2482                           ;Bio-NetApp.c: 52: else if (u8VarRef == 8)
  2483  02A7  3008               	movlw	8
  2484  02A8  0648               	xorwf	IsOk_CallBackRead@u8VarRef,w
  2485  02A9  1D03               	btfss	3,2
  2486  02AA  2AB3               	goto	l1388
  2487                           
  2488                           ;Bio-NetApp.c: 53: {
  2489                           ;Bio-NetApp.c: 55: *pu8Buffer = u8RPM;
  2490  02AB  0836               	movf	_u8RPM,w
  2491  02AC                     L2:	
  2492  02AC  00C6               	movwf	??_IsOk_CallBackRead
  2493  02AD  0845               	movf	IsOk_CallBackRead@pu8Buffer,w
  2494  02AE  0086               	movwf	6
  2495  02AF  0187               	clrf	7
  2496  02B0  0846               	movf	??_IsOk_CallBackRead,w
  2497  02B1  0081               	movwf	1
  2498                           
  2499                           ;Bio-NetApp.c: 56: }
  2500  02B2  2AC0               	goto	l1394
  2501  02B3                     l1388:	
  2502                           
  2503                           ;Bio-NetApp.c: 57: else if (u8VarRef == 15)
  2504  02B3  300F               	movlw	15
  2505  02B4  0648               	xorwf	IsOk_CallBackRead@u8VarRef,w
  2506  02B5  1D03               	btfss	3,2
  2507  02B6  2ABF               	goto	l1392
  2508                           
  2509                           ;Bio-NetApp.c: 58: {
  2510                           ;Bio-NetApp.c: 60: *(u16 *)pu8Buffer = u16TensionBatterie;
  2511  02B7  0845               	movf	IsOk_CallBackRead@pu8Buffer,w
  2512  02B8  0086               	movwf	6
  2513  02B9  0187               	clrf	7
  2514  02BA  0824               	movf	_u16TensionBatterie,w
  2515  02BB  3FC0               	movwi [0]fsr1
  2516  02BC  0825               	movf	_u16TensionBatterie+1,w
  2517  02BD  3FC1               	movwi [1]fsr1
  2518                           
  2519                           ;Bio-NetApp.c: 61: }
  2520  02BE  2AC0               	goto	l1394
  2521  02BF                     l1392:	
  2522                           
  2523                           ;Bio-NetApp.c: 62: else
  2524                           ;Bio-NetApp.c: 63: {
  2525                           ;Bio-NetApp.c: 65: Result=0;
  2526  02BF  01C7               	clrf	IsOk_CallBackRead@Result
  2527  02C0                     l1394:	
  2528                           
  2529                           ;Bio-NetApp.c: 66: }
  2530                           ;Bio-NetApp.c: 69: return (Result);
  2531  02C0  0847               	movf	IsOk_CallBackRead@Result,w
  2532  02C1  0008               	return
  2533  02C2                     __end_of_IsOk_CallBackRead:	
  2534                           
  2535                           	psect	text11
  2536  025F                     __ptext11:	
  2537 ;; *************** function _CalculChecksumAndSend *****************
  2538 ;; Defined at:
  2539 ;;		line 365 in file "Bio-Net.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  u8SizeFrame     1    wreg     unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  u8SizeFrame     1    9[BANK0 ] unsigned char 
  2544 ;;  index           1   10[BANK0 ] unsigned char 
  2545 ;;  u8Check         1    8[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1
  2555 ;;      Params:         0       0       0
  2556 ;;      Locals:         0       3       0
  2557 ;;      Temps:          0       1       0
  2558 ;;      Totals:         0       4       0
  2559 ;;Total ram usage:        4 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_BioNetProcess
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _CalculChecksumAndSend
  2571  025F                     _CalculChecksumAndSend:	
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _CalculChecksumAndSend: [wreg+fsr1l+fsr1h+status,2+status,0]
  2575                           ;CalculChecksumAndSend@u8SizeFrame stored from wreg
  2576  025F  0020               	movlb	0	; select bank0
  2577  0260  00C7               	movwf	CalculChecksumAndSend@u8SizeFrame
  2578                           
  2579                           ;Bio-Net.c: 367: u8 u8Check=0;
  2580  0261  01C6               	clrf	CalculChecksumAndSend@u8Check
  2581                           
  2582                           ;Bio-Net.c: 368: u8 index=0;
  2583  0262  01C8               	clrf	CalculChecksumAndSend@index
  2584                           
  2585                           ;Bio-Net.c: 371: if (u8SizeFrame != 1)
  2586  0263  0347               	decf	CalculChecksumAndSend@u8SizeFrame,w
  2587  0264  1903               	btfsc	3,2
  2588  0265  2A85               	goto	l1366
  2589                           
  2590                           ;Bio-Net.c: 372: {
  2591                           ;Bio-Net.c: 374: u8SizeFrame--;
  2592  0266  3001               	movlw	1
  2593  0267  02C7               	subwf	CalculChecksumAndSend@u8SizeFrame,f
  2594  0268                     l1360:	
  2595                           ;Bio-Net.c: 377: for (; index < u8SizeFrame ; index++)
  2596                           
  2597  0268  0847               	movf	CalculChecksumAndSend@u8SizeFrame,w
  2598  0269  0248               	subwf	CalculChecksumAndSend@index,w
  2599  026A  1803               	btfsc	3,0
  2600  026B  2A79               	goto	l1362
  2601                           
  2602                           ;Bio-Net.c: 378: {
  2603                           ;Bio-Net.c: 379: u8Check+=tu8BioNetBuff[index];
  2604  026C  0848               	movf	CalculChecksumAndSend@index,w
  2605  026D  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  2606  026E  0086               	movwf	6
  2607  026F  0187               	clrf	7
  2608  0270  0801               	movf	1,w
  2609  0271  00C5               	movwf	??_CalculChecksumAndSend
  2610  0272  0845               	movf	??_CalculChecksumAndSend,w
  2611  0273  07C6               	addwf	CalculChecksumAndSend@u8Check,f
  2612  0274  3001               	movlw	1
  2613  0275  00C5               	movwf	??_CalculChecksumAndSend
  2614  0276  0845               	movf	??_CalculChecksumAndSend,w
  2615  0277  07C8               	addwf	CalculChecksumAndSend@index,f
  2616  0278  2A68               	goto	l1360
  2617  0279                     l1362:	
  2618                           
  2619                           ;Bio-Net.c: 380: }
  2620                           ;Bio-Net.c: 382: tu8BioNetBuff[index]= ~u8Check;
  2621  0279  0946               	comf	CalculChecksumAndSend@u8Check,w
  2622  027A  00C5               	movwf	??_CalculChecksumAndSend
  2623  027B  0848               	movf	CalculChecksumAndSend@index,w
  2624  027C  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  2625  027D  0086               	movwf	6
  2626  027E  0187               	clrf	7
  2627  027F  0845               	movf	??_CalculChecksumAndSend,w
  2628  0280  0081               	movwf	1
  2629                           
  2630                           ;Bio-Net.c: 384: u8SizeFrame++;
  2631  0281  3001               	movlw	1
  2632  0282  00C5               	movwf	??_CalculChecksumAndSend
  2633  0283  0845               	movf	??_CalculChecksumAndSend,w
  2634  0284  07C7               	addwf	CalculChecksumAndSend@u8SizeFrame,f
  2635  0285                     l1366:	
  2636                           
  2637                           ;Bio-Net.c: 385: }
  2638                           ;Bio-Net.c: 388: u8TxFrameSize=u8SizeFrame;
  2639  0285  0847               	movf	CalculChecksumAndSend@u8SizeFrame,w
  2640  0286  00C5               	movwf	??_CalculChecksumAndSend
  2641  0287  0845               	movf	??_CalculChecksumAndSend,w
  2642  0288  00B9               	movwf	_u8TxFrameSize
  2643                           
  2644                           ;Bio-Net.c: 389: u8IndexTx=1;
  2645  0289  01B2               	clrf	_u8IndexTx
  2646  028A  0AB2               	incf	_u8IndexTx,f
  2647                           
  2648                           ;Bio-Net.c: 390: TXREG=tu8BioNetBuff[0];
  2649  028B  083A               	movf	_tu8BioNetBuff,w
  2650  028C  0023               	movlb	3	; select bank3
  2651  028D  009A               	movwf	26	;volatile
  2652                           
  2653                           ;Bio-Net.c: 391: TXIE=1;
  2654  028E  0021               	movlb	1	; select bank1
  2655  028F  1611               	bsf	17,4	;volatile
  2656  0290  0008               	return
  2657  0291                     __end_of_CalculChecksumAndSend:	
  2658                           
  2659                           	psect	text12
  2660  03CF                     __ptext12:	
  2661 ;; *************** function _BioNetRazFlag *****************
  2662 ;; Defined at:
  2663 ;;		line 431 in file "Bio-Net.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		status,2
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1
  2677 ;;      Params:         0       0       0
  2678 ;;      Locals:         0       0       0
  2679 ;;      Temps:          0       0       0
  2680 ;;      Totals:         0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    4
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_BioNetProcess
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _BioNetRazFlag
  2693  03CF                     _BioNetRazFlag:	
  2694                           
  2695                           ;Bio-Net.c: 433: u8IndexRx =0;
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _BioNetRazFlag: [status,2]
  2699  03CF  0020               	movlb	0	; select bank0
  2700  03D0  01B1               	clrf	_u8IndexRx
  2701                           
  2702                           ;Bio-Net.c: 435: bNetworkCommand=0;
  2703  03D1  01A8               	clrf	_bNetworkCommand
  2704                           
  2705                           ;Bio-Net.c: 436: bNetworkCommandOK=0;
  2706  03D2  01A9               	clrf	_bNetworkCommandOK
  2707                           
  2708                           ;Bio-Net.c: 437: bIsWriteFrame=0;
  2709  03D3  01A7               	clrf	_bIsWriteFrame
  2710                           
  2711                           ;Bio-Net.c: 438: bNetworkReadOK=0;
  2712  03D4  01AA               	clrf	_bNetworkReadOK
  2713                           
  2714                           ;Bio-Net.c: 439: bNetworkWriteOK=0;
  2715  03D5  01AB               	clrf	_bNetworkWriteOK
  2716  03D6  0008               	return
  2717  03D7                     __end_of_BioNetRazFlag:	
  2718                           
  2719                           	psect	text13
  2720  03A6                     __ptext13:	
  2721 ;; *************** function _BioNetInit *****************
  2722 ;; Defined at:
  2723 ;;		line 51 in file "Bio-Net.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1
  2737 ;;      Params:         0       0       0
  2738 ;;      Locals:         0       0       0
  2739 ;;      Temps:          0       1       0
  2740 ;;      Totals:         0       1       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    4
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _BioNetInit
  2753  03A6                     _BioNetInit:	
  2754                           
  2755                           ;Bio-Net.c: 55: OSCCON= 0x0E<<3;
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _BioNetInit: [wreg+status,2+status,0]
  2759  03A6  3070               	movlw	112
  2760  03A7  0021               	movlb	1	; select bank1
  2761  03A8  0099               	movwf	25	;volatile
  2762                           
  2763                           ;Bio-Net.c: 59: TMR0CS =0;
  2764  03A9  1295               	bcf	21,5	;volatile
  2765                           
  2766                           ;Bio-Net.c: 60: PS0=0;
  2767  03AA  1015               	bcf	21,0	;volatile
  2768                           
  2769                           ;Bio-Net.c: 61: PS1=1;
  2770  03AB  1495               	bsf	21,1	;volatile
  2771                           
  2772                           ;Bio-Net.c: 62: PS2=0;
  2773  03AC  1115               	bcf	21,2	;volatile
  2774                           
  2775                           ;Bio-Net.c: 63: PSA=0;
  2776  03AD  1195               	bcf	21,3	;volatile
  2777                           
  2778                           ;Bio-Net.c: 64: TMR0IE=1;
  2779  03AE  168B               	bsf	11,5	;volatile
  2780                           
  2781                           ;Bio-Net.c: 68: INTCON|=0x80 + 0x40;
  2782  03AF  30C0               	movlw	192
  2783  03B0  0020               	movlb	0	; select bank0
  2784  03B1  00C5               	movwf	??_BioNetInit
  2785  03B2  0845               	movf	??_BioNetInit,w
  2786  03B3  048B               	iorwf	11,f	;volatile
  2787  03B4  0008               	return
  2788  03B5                     __end_of_BioNetInit:	
  2789                           
  2790                           	psect	intentry
  2791  0004                     __pintentry:	
  2792 ;; *************** function _isr *****************
  2793 ;; Defined at:
  2794 ;;		line 15 in file "Interrupt.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1
  2808 ;;      Params:         0       0       0
  2809 ;;      Locals:         0       0       0
  2810 ;;      Temps:          0       2       0
  2811 ;;      Totals:         0       2       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    3
  2815 ;; This function calls:
  2816 ;;		_BioNetRxInt
  2817 ;;		_BioNetTxInt
  2818 ;;		_DC24It10ms
  2819 ;;		i1_BioNetRazFlag
  2820 ;; This function is called by:
  2821 ;;		Interrupt level 1
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825  0004                     _isr:	
  2826                           
  2827                           ;incstack = 0
  2828  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2829                           
  2830                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2831  0005  3180               	pagesel	$
  2832  0006  0020               	movlb	0	; select bank0
  2833  0007  087F               	movf	127,w
  2834  0008  00C4               	movwf	??_isr+1
  2835                           
  2836                           ;Interrupt.c: 18: if (TMR0IF & TMR0IE)
  2837  0009  3001               	movlw	1
  2838  000A  1D0B               	btfss	11,2	;volatile
  2839  000B  3900               	andlw	0
  2840  000C  1E8B               	btfss	11,5	;volatile
  2841  000D  3900               	andlw	0
  2842  000E  1C09               	btfss	9,0
  2843  000F  282D               	goto	i1l1752
  2844                           
  2845                           ;Interrupt.c: 19: {
  2846                           ;Interrupt.c: 21: TMR0IF = 0;
  2847  0010  110B               	bcf	11,2	;volatile
  2848                           
  2849                           ;Interrupt.c: 24: if (u8RxNoDelay!=0)
  2850  0011  0838               	movf	_u8RxNoDelay,w
  2851  0012  1903               	btfsc	3,2
  2852  0013  2817               	goto	i1l1734
  2853                           
  2854                           ;Interrupt.c: 25: {
  2855                           ;Interrupt.c: 27: u8RxNoDelay--;
  2856  0014  3001               	movlw	1
  2857  0015  02B8               	subwf	_u8RxNoDelay,f
  2858                           
  2859                           ;Interrupt.c: 28: }
  2860  0016  281D               	goto	i1l1740
  2861  0017                     i1l1734:	
  2862                           
  2863                           ;Interrupt.c: 29: else
  2864                           ;Interrupt.c: 30: {
  2865                           ;Interrupt.c: 33: if (bRazFlagAllowed)
  2866  0017  082E               	movf	_bRazFlagAllowed,w
  2867  0018  1903               	btfsc	3,2
  2868  0019  281D               	goto	i1l1740
  2869                           
  2870                           ;Interrupt.c: 34: {
  2871                           ;Interrupt.c: 35: BioNetRazFlag();
  2872  001A  23D7               	fcall	i1_BioNetRazFlag
  2873                           
  2874                           ;Interrupt.c: 36: bRazFlagAllowed=0;
  2875  001B  0020               	movlb	0	; select bank0
  2876  001C  01AE               	clrf	_bRazFlagAllowed
  2877  001D                     i1l1740:	
  2878                           
  2879                           ;Interrupt.c: 37: }
  2880                           ;Interrupt.c: 38: }
  2881                           ;Interrupt.c: 42: u8Prescaler10ms++;
  2882  001D  3001               	movlw	1
  2883  001E  00C3               	movwf	??_isr
  2884  001F  0843               	movf	??_isr,w
  2885  0020  07B5               	addwf	_u8Prescaler10ms,f
  2886                           
  2887                           ;Interrupt.c: 44: if (u8Prescaler10ms==4*10)
  2888  0021  3028               	movlw	40
  2889  0022  0635               	xorwf	_u8Prescaler10ms,w
  2890  0023  1D03               	btfss	3,2
  2891  0024  2844               	goto	i1l68
  2892                           
  2893                           ;Interrupt.c: 45: {
  2894                           ;Interrupt.c: 46: u8Prescaler10ms=0;
  2895  0025  01B5               	clrf	_u8Prescaler10ms
  2896                           
  2897                           ;Interrupt.c: 48: DC24It10ms();
  2898  0026  235A               	fcall	_DC24It10ms
  2899                           
  2900                           ;Interrupt.c: 50: if (OERR)
  2901  0027  0023               	movlb	3	; select bank3
  2902  0028  1C9D               	btfss	29,1	;volatile
  2903  0029  2844               	goto	i1l68
  2904                           
  2905                           ;Interrupt.c: 51: {
  2906                           ;Interrupt.c: 53: CREN=0;
  2907  002A  121D               	bcf	29,4	;volatile
  2908                           
  2909                           ;Interrupt.c: 54: CREN=1;
  2910  002B  161D               	bsf	29,4	;volatile
  2911                           
  2912                           ;Interrupt.c: 55: }
  2913                           ;Interrupt.c: 56: }
  2914                           ;Interrupt.c: 58: }
  2915  002C  2844               	goto	i1l68
  2916  002D                     i1l1752:	
  2917                           
  2918                           ;Interrupt.c: 60: else if (RCIF & RCIE)
  2919  002D  3001               	movlw	1
  2920  002E  0020               	movlb	0	; select bank0
  2921  002F  1E91               	btfss	17,5	;volatile
  2922  0030  3900               	andlw	0
  2923  0031  0021               	movlb	1	; select bank1
  2924  0032  1E91               	btfss	17,5	;volatile
  2925  0033  3900               	andlw	0
  2926  0034  1C09               	btfss	9,0
  2927  0035  283A               	goto	i1l1758
  2928                           
  2929                           ;Interrupt.c: 61: {
  2930                           ;Interrupt.c: 62: RCIF=0;
  2931  0036  0020               	movlb	0	; select bank0
  2932  0037  1291               	bcf	17,5	;volatile
  2933                           
  2934                           ;Interrupt.c: 63: BioNetRxInt();
  2935  0038  20EF               	fcall	_BioNetRxInt
  2936                           
  2937                           ;Interrupt.c: 64: }
  2938  0039  2844               	goto	i1l68
  2939  003A                     i1l1758:	
  2940                           
  2941                           ;Interrupt.c: 66: else if (TXIF & TXIE)
  2942  003A  3001               	movlw	1
  2943  003B  0020               	movlb	0	; select bank0
  2944  003C  1E11               	btfss	17,4	;volatile
  2945  003D  3900               	andlw	0
  2946  003E  0021               	movlb	1	; select bank1
  2947  003F  1E11               	btfss	17,4	;volatile
  2948  0040  3900               	andlw	0
  2949  0041  1C09               	btfss	9,0
  2950  0042  2844               	goto	i1l68
  2951                           
  2952                           ;Interrupt.c: 67: {
  2953                           ;Interrupt.c: 73: BioNetTxInt();
  2954  0043  2370               	fcall	_BioNetTxInt
  2955  0044                     i1l68:	
  2956  0044  0020               	movlb	0	; select bank0
  2957  0045  0844               	movf	??_isr+1,w
  2958  0046  00FF               	movwf	127
  2959  0047  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2960  0048  0009               	retfie
  2961  0049                     __end_of_isr:	
  2962                           
  2963                           	psect	text15
  2964  035A                     __ptext15:	
  2965 ;; *************** function _DC24It10ms *****************
  2966 ;; Defined at:
  2967 ;;		line 199 in file "DC22M_main.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1
  2981 ;;      Params:         0       0       0
  2982 ;;      Locals:         0       0       0
  2983 ;;      Temps:          1       0       0
  2984 ;;      Totals:         1       0       0
  2985 ;;Total ram usage:        1 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_isr
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _DC24It10ms
  2996  035A                     _DC24It10ms:	
  2997                           
  2998                           ;DC22M_main.c: 203: u8Prescaler10ms = 0;
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in _DC24It10ms: [wreg+status,2+status,0]
  3002  035A  0020               	movlb	0	; select bank0
  3003  035B  01B5               	clrf	_u8Prescaler10ms
  3004                           
  3005                           ;DC22M_main.c: 206: Tempo500ms++;
  3006  035C  3001               	movlw	1
  3007  035D  00F0               	movwf	??_DC24It10ms
  3008  035E  0870               	movf	??_DC24It10ms,w
  3009  035F  07A6               	addwf	_Tempo500ms,f
  3010                           
  3011                           ;DC22M_main.c: 207: if (Tempo500ms >= 50)
  3012  0360  3032               	movlw	50
  3013  0361  0226               	subwf	_Tempo500ms,w
  3014  0362  1C03               	skipc
  3015  0363  0008               	return
  3016                           
  3017                           ;DC22M_main.c: 208: {
  3018                           ;DC22M_main.c: 211: u8Pedalage=u8PedalageCpt;
  3019  0364  0834               	movf	_u8PedalageCpt,w
  3020  0365  00F0               	movwf	??_DC24It10ms
  3021  0366  0870               	movf	??_DC24It10ms,w
  3022  0367  00B3               	movwf	_u8Pedalage
  3023                           
  3024                           ;DC22M_main.c: 213: u8RPM=u8RPMCpt;
  3025  0368  0837               	movf	_u8RPMCpt,w
  3026  0369  00F0               	movwf	??_DC24It10ms
  3027  036A  0870               	movf	??_DC24It10ms,w
  3028  036B  00B6               	movwf	_u8RPM
  3029                           
  3030                           ;DC22M_main.c: 216: Tempo500ms=0;
  3031  036C  01A6               	clrf	_Tempo500ms
  3032                           
  3033                           ;DC22M_main.c: 219: u8PedalageCpt=0;
  3034  036D  01B4               	clrf	_u8PedalageCpt
  3035                           
  3036                           ;DC22M_main.c: 220: u8RPMCpt=0;
  3037  036E  01B7               	clrf	_u8RPMCpt
  3038  036F  0008               	return
  3039  0370                     __end_of_DC24It10ms:	
  3040                           
  3041                           	psect	text16
  3042  0370                     __ptext16:	
  3043 ;; *************** function _BioNetTxInt *****************
  3044 ;; Defined at:
  3045 ;;		line 326 in file "Bio-Net.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1
  3059 ;;      Params:         0       0       0
  3060 ;;      Locals:         0       0       0
  3061 ;;      Temps:          1       0       0
  3062 ;;      Totals:         1       0       0
  3063 ;;Total ram usage:        1 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_isr
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _BioNetTxInt
  3074  0370                     _BioNetTxInt:	
  3075                           
  3076                           ;Bio-Net.c: 328: if (u8IndexTx < u8TxFrameSize)
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _BioNetTxInt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3080  0370  0020               	movlb	0	; select bank0
  3081  0371  0839               	movf	_u8TxFrameSize,w
  3082  0372  0232               	subwf	_u8IndexTx,w
  3083  0373  1803               	skipnc
  3084  0374  2B82               	goto	i1l186
  3085                           
  3086                           ;Bio-Net.c: 329: {
  3087                           ;Bio-Net.c: 331: TXREG=tu8BioNetBuff[u8IndexTx++];
  3088  0375  0832               	movf	_u8IndexTx,w
  3089  0376  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  3090  0377  0086               	movwf	6
  3091  0378  0187               	clrf	7
  3092  0379  0801               	movf	1,w
  3093  037A  0023               	movlb	3	; select bank3
  3094  037B  009A               	movwf	26	;volatile
  3095  037C  3001               	movlw	1
  3096  037D  00F0               	movwf	??_BioNetTxInt
  3097  037E  0870               	movf	??_BioNetTxInt,w
  3098  037F  0020               	movlb	0	; select bank0
  3099  0380  07B2               	addwf	_u8IndexTx,f
  3100                           
  3101                           ;Bio-Net.c: 332: }
  3102  0381  0008               	return
  3103  0382                     i1l186:	
  3104                           
  3105                           ;Bio-Net.c: 333: else
  3106                           ;Bio-Net.c: 334: {
  3107                           ;Bio-Net.c: 335: TXIE=0;
  3108  0382  0021               	movlb	1	; select bank1
  3109  0383  1211               	bcf	17,4	;volatile
  3110  0384  0008               	return
  3111  0385                     __end_of_BioNetTxInt:	
  3112                           
  3113                           	psect	text17
  3114  00EF                     __ptext17:	
  3115 ;; *************** function _BioNetRxInt *****************
  3116 ;; Defined at:
  3117 ;;		line 205 in file "Bio-Net.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  u8CharBuf       1    4[BANK0 ] unsigned char 
  3122 ;;  u8TxFrameSiz    1    3[BANK0 ] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1
  3132 ;;      Params:         0       0       0
  3133 ;;      Locals:         0       2       0
  3134 ;;      Temps:          0       3       0
  3135 ;;      Totals:         0       5       0
  3136 ;;Total ram usage:        5 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    2
  3139 ;; This function calls:
  3140 ;;		_IsOKChecksum
  3141 ;;		_IsOKVarIsForUs
  3142 ;;		_pGetVafConf
  3143 ;;		i1_BioNetRazFlag
  3144 ;; This function is called by:
  3145 ;;		_isr
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _BioNetRxInt
  3151  00EF                     _BioNetRxInt:	
  3152                           
  3153                           ;Bio-Net.c: 207: u8 u8CharBuf;
  3154                           ;Bio-Net.c: 208: u8 u8TxFrameSize;
  3155                           ;Bio-Net.c: 210: u8RxNoDelay=5;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _BioNetRxInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3159  00EF  3005               	movlw	5
  3160  00F0  0020               	movlb	0	; select bank0
  3161  00F1  00BE               	movwf	??_BioNetRxInt
  3162  00F2  083E               	movf	??_BioNetRxInt,w
  3163  00F3  00B8               	movwf	_u8RxNoDelay
  3164                           
  3165                           ;Bio-Net.c: 211: bRazFlagAllowed=1;
  3166  00F4  01AE               	clrf	_bRazFlagAllowed
  3167  00F5  0AAE               	incf	_bRazFlagAllowed,f
  3168                           
  3169                           ;Bio-Net.c: 214: u8CharBuf=RCREG;
  3170  00F6  0023               	movlb	3	; select bank3
  3171  00F7  0819               	movf	25,w	;volatile
  3172  00F8  0020               	movlb	0	; select bank0
  3173  00F9  00BE               	movwf	??_BioNetRxInt
  3174  00FA  083E               	movf	??_BioNetRxInt,w
  3175  00FB  00C2               	movwf	BioNetRxInt@u8CharBuf
  3176                           
  3177                           ;Bio-Net.c: 216: if (u8IndexRx == 0xFF)
  3178  00FC  0A31               	incf	_u8IndexRx,w
  3179  00FD  1903               	btfsc	3,2
  3180  00FE  0008               	return
  3181                           
  3182                           ;Bio-Net.c: 219: }
  3183                           ;Bio-Net.c: 222: tu8BioNetBuff[u8IndexRx]=u8CharBuf;
  3184                           
  3185                           ;Bio-Net.c: 217: {
  3186                           ;Bio-Net.c: 218: return;
  3187  00FF  0842               	movf	BioNetRxInt@u8CharBuf,w
  3188  0100  00BE               	movwf	??_BioNetRxInt
  3189  0101  0831               	movf	_u8IndexRx,w
  3190  0102  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  3191  0103  0086               	movwf	6
  3192  0104  0187               	clrf	7
  3193  0105  083E               	movf	??_BioNetRxInt,w
  3194  0106  0081               	movwf	1
  3195                           
  3196                           ;Bio-Net.c: 225: if (u8IndexRx == 0)
  3197  0107  0831               	movf	_u8IndexRx,w
  3198  0108  1D03               	btfss	3,2
  3199  0109  2934               	goto	i1l1572
  3200                           
  3201                           ;Bio-Net.c: 226: {
  3202                           ;Bio-Net.c: 229: if ( u8CharBuf==0x80 )
  3203  010A  3080               	movlw	128
  3204  010B  0642               	xorwf	BioNetRxInt@u8CharBuf,w
  3205  010C  1D03               	btfss	3,2
  3206  010D  2911               	goto	i1l1552
  3207                           
  3208                           ;Bio-Net.c: 230: {
  3209                           ;Bio-Net.c: 232: bNetworkCommand=1;
  3210  010E  01A8               	clrf	_bNetworkCommand
  3211  010F  0AA8               	incf	_bNetworkCommand,f
  3212                           
  3213                           ;Bio-Net.c: 235: }
  3214  0110  2976               	goto	i1l1596
  3215  0111                     i1l1552:	
  3216                           
  3217                           ;Bio-Net.c: 236: else if (IsOKVarIsForUs(u8CharBuf))
  3218  0111  0842               	movf	BioNetRxInt@u8CharBuf,w
  3219  0112  22F3               	fcall	_IsOKVarIsForUs
  3220  0113  3A00               	xorlw	0
  3221  0114  1903               	skipnz
  3222  0115  292E               	goto	i1l1570
  3223                           
  3224                           ;Bio-Net.c: 237: {
  3225                           ;Bio-Net.c: 240: pVarConfDes=pGetVafConf(u8CharBuf & 0x7F);
  3226  0116  0020               	movlb	0	; select bank0
  3227  0117  0842               	movf	BioNetRxInt@u8CharBuf,w
  3228  0118  397F               	andlw	127
  3229  0119  21E3               	fcall	_pGetVafConf
  3230  011A  0877               	movf	?_pGetVafConf+1,w
  3231  011B  0020               	movlb	0	; select bank0
  3232  011C  00A1               	movwf	_pVarConfDes+1
  3233  011D  0876               	movf	?_pGetVafConf,w
  3234  011E  00A0               	movwf	_pVarConfDes
  3235                           
  3236                           ;Bio-Net.c: 243: if ((u8CharBuf & 0x80)==0)
  3237  011F  1BC2               	btfsc	BioNetRxInt@u8CharBuf,7
  3238  0120  2925               	goto	i1l170
  3239                           
  3240                           ;Bio-Net.c: 244: {
  3241                           ;Bio-Net.c: 247: bIsWriteFrame=0;
  3242  0121  01A7               	clrf	_bIsWriteFrame
  3243                           
  3244                           ;Bio-Net.c: 248: bNetworkReadOK=1;
  3245  0122  01AA               	clrf	_bNetworkReadOK
  3246  0123  0AAA               	incf	_bNetworkReadOK,f
  3247  0124  292C               	goto	i1l1568
  3248  0125                     i1l170:	
  3249                           ;Bio-Net.c: 250: }
  3250                           
  3251                           ;Bio-Net.c: 249: u8IndexRx=0xFF;
  3252                           
  3253                           
  3254                           ;Bio-Net.c: 251: else
  3255                           ;Bio-Net.c: 252: {
  3256                           ;Bio-Net.c: 254: bIsWriteFrame=1;
  3257  0125  01A7               	clrf	_bIsWriteFrame
  3258  0126  0AA7               	incf	_bIsWriteFrame,f
  3259                           
  3260                           ;Bio-Net.c: 256: if (pVarConfDes==(0))
  3261  0127  0820               	movf	_pVarConfDes,w
  3262  0128  0421               	iorwf	_pVarConfDes+1,w
  3263  0129  1D03               	btfss	3,2
  3264  012A  2976               	goto	i1l1596
  3265                           
  3266                           ;Bio-Net.c: 257: {
  3267                           ;Bio-Net.c: 260: bIsWriteFrame=0;
  3268  012B  01A7               	clrf	_bIsWriteFrame
  3269  012C                     i1l1568:	
  3270                           
  3271                           ;Bio-Net.c: 261: u8IndexRx=0xFF;
  3272  012C  30FF               	movlw	255
  3273  012D  2930               	goto	L3
  3274  012E                     i1l1570:	
  3275                           ;Bio-Net.c: 262: }
  3276                           ;Bio-Net.c: 263: }
  3277                           ;Bio-Net.c: 264: }
  3278                           
  3279                           
  3280                           ;Bio-Net.c: 265: else
  3281                           ;Bio-Net.c: 266: {
  3282                           ;Bio-Net.c: 270: u8IndexRx=0xFF;
  3283  012E  30FF               	movlw	255
  3284  012F  0020               	movlb	0	; select bank0
  3285  0130                     L3:	
  3286  0130  00BE               	movwf	??_BioNetRxInt
  3287  0131  083E               	movf	??_BioNetRxInt,w
  3288  0132  00B1               	movwf	_u8IndexRx
  3289                           
  3290                           ;Bio-Net.c: 271: }
  3291                           ;Bio-Net.c: 273: }
  3292  0133  2976               	goto	i1l1596
  3293  0134                     i1l1572:	
  3294                           
  3295                           ;Bio-Net.c: 274: else
  3296                           ;Bio-Net.c: 275: {
  3297                           ;Bio-Net.c: 276: if (bNetworkCommand==1)
  3298  0134  0328               	decf	_bNetworkCommand,w
  3299  0135  1D03               	btfss	3,2
  3300  0136  2948               	goto	i1l1582
  3301                           
  3302                           ;Bio-Net.c: 277: {
  3303                           ;Bio-Net.c: 280: if (u8IndexRx== (4-1))
  3304  0137  3003               	movlw	3
  3305  0138  0631               	xorwf	_u8IndexRx,w
  3306  0139  1D03               	btfss	3,2
  3307  013A  2976               	goto	i1l1596
  3308                           
  3309                           ;Bio-Net.c: 281: {
  3310                           ;Bio-Net.c: 283: u8IndexRx=0xFF;
  3311  013B  30FF               	movlw	255
  3312  013C  00BE               	movwf	??_BioNetRxInt
  3313  013D  083E               	movf	??_BioNetRxInt,w
  3314  013E  00B1               	movwf	_u8IndexRx
  3315                           
  3316                           ;Bio-Net.c: 285: if (IsOKChecksum(4))
  3317  013F  3004               	movlw	4
  3318  0140  22C2               	fcall	_IsOKChecksum
  3319  0141  3A00               	xorlw	0
  3320  0142  1903               	skipnz
  3321  0143  2976               	goto	i1l1596
  3322                           
  3323                           ;Bio-Net.c: 286: {
  3324                           ;Bio-Net.c: 288: bNetworkCommandOK=1;
  3325  0144  0020               	movlb	0	; select bank0
  3326  0145  01A9               	clrf	_bNetworkCommandOK
  3327  0146  0AA9               	incf	_bNetworkCommandOK,f
  3328                           
  3329                           ;Bio-Net.c: 290: }
  3330                           ;Bio-Net.c: 291: }
  3331                           ;Bio-Net.c: 293: }
  3332  0147  2976               	goto	i1l1596
  3333  0148                     i1l1582:	
  3334                           
  3335                           ;Bio-Net.c: 294: else if (bIsWriteFrame)
  3336  0148  0827               	movf	_bIsWriteFrame,w
  3337  0149  1903               	btfsc	3,2
  3338  014A  2975               	goto	i1l1594
  3339                           
  3340                           ;Bio-Net.c: 295: {
  3341                           ;Bio-Net.c: 297: u8TxFrameSize=(pVarConfDes->u8VarTypeSize & 0x0F)+2;
  3342  014B  0821               	movf	_pVarConfDes+1,w
  3343  014C  00BF               	movwf	??_BioNetRxInt+1
  3344  014D  0820               	movf	_pVarConfDes,w
  3345  014E  00BE               	movwf	??_BioNetRxInt
  3346  014F  3002               	movlw	2
  3347  0150  073E               	addwf	??_BioNetRxInt,w
  3348  0151  0084               	movwf	4
  3349  0152  083F               	movf	??_BioNetRxInt+1,w
  3350  0153  1803               	skipnc
  3351  0154  0A3F               	incf	??_BioNetRxInt+1,w
  3352  0155  0085               	movwf	5
  3353  0156  0800               	movf	0,w	;code access
  3354  0157  390F               	andlw	15
  3355  0158  3E02               	addlw	2
  3356  0159  00C0               	movwf	??_BioNetRxInt+2
  3357  015A  0840               	movf	??_BioNetRxInt+2,w
  3358  015B  00C1               	movwf	BioNetRxInt@u8TxFrameSize
  3359                           
  3360                           ;Bio-Net.c: 299: if (u8IndexRx== (u8TxFrameSize-1))
  3361  015C  0841               	movf	BioNetRxInt@u8TxFrameSize,w
  3362  015D  3EFF               	addlw	255
  3363  015E  00BE               	movwf	??_BioNetRxInt
  3364  015F  30FF               	movlw	255
  3365  0160  1803               	skipnc
  3366  0161  3000               	movlw	0
  3367  0162  00BF               	movwf	??_BioNetRxInt+1
  3368  0163  0831               	movf	_u8IndexRx,w
  3369  0164  063E               	xorwf	??_BioNetRxInt,w
  3370  0165  043F               	iorwf	??_BioNetRxInt+1,w
  3371  0166  1D03               	skipz
  3372  0167  2976               	goto	i1l1596
  3373                           
  3374                           ;Bio-Net.c: 300: {
  3375                           ;Bio-Net.c: 302: u8IndexRx=0xFF;
  3376  0168  30FF               	movlw	255
  3377  0169  00BE               	movwf	??_BioNetRxInt
  3378  016A  083E               	movf	??_BioNetRxInt,w
  3379  016B  00B1               	movwf	_u8IndexRx
  3380                           
  3381                           ;Bio-Net.c: 304: if (IsOKChecksum(u8TxFrameSize))
  3382  016C  0841               	movf	BioNetRxInt@u8TxFrameSize,w
  3383  016D  22C2               	fcall	_IsOKChecksum
  3384  016E  3A00               	xorlw	0
  3385  016F  1903               	skipnz
  3386  0170  2976               	goto	i1l1596
  3387                           
  3388                           ;Bio-Net.c: 305: {
  3389                           ;Bio-Net.c: 307: bNetworkWriteOK=1;
  3390  0171  0020               	movlb	0	; select bank0
  3391  0172  01AB               	clrf	_bNetworkWriteOK
  3392  0173  0AAB               	incf	_bNetworkWriteOK,f
  3393                           
  3394                           ;Bio-Net.c: 308: }
  3395                           ;Bio-Net.c: 309: }
  3396                           ;Bio-Net.c: 312: }
  3397  0174  2976               	goto	i1l1596
  3398  0175                     i1l1594:	
  3399                           
  3400                           ;Bio-Net.c: 313: else
  3401                           ;Bio-Net.c: 314: {
  3402                           ;Bio-Net.c: 316: BioNetRazFlag();
  3403  0175  23D7               	fcall	i1_BioNetRazFlag
  3404  0176                     i1l1596:	
  3405                           
  3406                           ;Bio-Net.c: 317: }
  3407                           ;Bio-Net.c: 318: }
  3408                           ;Bio-Net.c: 321: if (u8IndexRx!=0xFF) u8IndexRx++;
  3409  0176  0020               	movlb	0	; select bank0
  3410  0177  0A31               	incf	_u8IndexRx,w
  3411  0178  1903               	btfsc	3,2
  3412  0179  0008               	return
  3413  017A  3001               	movlw	1
  3414  017B  00BE               	movwf	??_BioNetRxInt
  3415  017C  083E               	movf	??_BioNetRxInt,w
  3416  017D  07B1               	addwf	_u8IndexRx,f
  3417  017E  0008               	return
  3418  017F                     __end_of_BioNetRxInt:	
  3419                           
  3420                           	psect	text18
  3421  03D7                     __ptext18:	
  3422 ;; *************** function i1_BioNetRazFlag *****************
  3423 ;; Defined at:
  3424 ;;		line 431 in file "Bio-Net.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1
  3438 ;;      Params:         0       0       0
  3439 ;;      Locals:         0       0       0
  3440 ;;      Temps:          0       0       0
  3441 ;;      Totals:         0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_isr
  3448 ;;		_BioNetRxInt
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function i1_BioNetRazFlag
  3454  03D7                     i1_BioNetRazFlag:	
  3455                           
  3456                           ;Bio-Net.c: 433: u8IndexRx =0;
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in i1_BioNetRazFlag: [status,2]
  3460  03D7  0020               	movlb	0	; select bank0
  3461  03D8  01B1               	clrf	_u8IndexRx
  3462                           
  3463                           ;Bio-Net.c: 435: bNetworkCommand=0;
  3464  03D9  01A8               	clrf	_bNetworkCommand
  3465                           
  3466                           ;Bio-Net.c: 436: bNetworkCommandOK=0;
  3467  03DA  01A9               	clrf	_bNetworkCommandOK
  3468                           
  3469                           ;Bio-Net.c: 437: bIsWriteFrame=0;
  3470  03DB  01A7               	clrf	_bIsWriteFrame
  3471                           
  3472                           ;Bio-Net.c: 438: bNetworkReadOK=0;
  3473  03DC  01AA               	clrf	_bNetworkReadOK
  3474                           
  3475                           ;Bio-Net.c: 439: bNetworkWriteOK=0;
  3476  03DD  01AB               	clrf	_bNetworkWriteOK
  3477  03DE  0008               	return
  3478  03DF                     __end_ofi1_BioNetRazFlag:	
  3479                           
  3480                           	psect	text19
  3481  01E3                     __ptext19:	
  3482 ;; *************** function _pGetVafConf *****************
  3483 ;; Defined at:
  3484 ;;		line 446 in file "Bio-Net.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  VarRef          1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  VarRef          1   12[COMMON] unsigned char 
  3489 ;;  idx             1   13[COMMON] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2    6[COMMON] PTR struct VarConfDesc
  3492 ;; Registers used:
  3493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1
  3499 ;;      Params:         0       0       0
  3500 ;;      Locals:         2       0       0
  3501 ;;      Temps:          6       0       0
  3502 ;;      Totals:         8       0       0
  3503 ;;Total ram usage:        8 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    1
  3506 ;; This function calls:
  3507 ;;		___wmul
  3508 ;; This function is called by:
  3509 ;;		_BioNetRxInt
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _pGetVafConf
  3515  01E3                     _pGetVafConf:	
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _pGetVafConf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3519                           ;pGetVafConf@VarRef stored from wreg
  3520  01E3  00FC               	movwf	pGetVafConf@VarRef
  3521                           
  3522                           ;Bio-Net.c: 448: u8 idx=0;
  3523  01E4  01FD               	clrf	pGetVafConf@idx
  3524                           
  3525                           ;Bio-Net.c: 451: for (;idx<4;idx++)
  3526  01E5  3004               	movlw	4
  3527  01E6  027D               	subwf	pGetVafConf@idx,w
  3528  01E7  1803               	btfsc	3,0
  3529  01E8  2A24               	goto	i1l1442
  3530  01E9                     i1l1432:	
  3531                           
  3532                           ;Bio-Net.c: 452: {
  3533                           ;Bio-Net.c: 453: if (sBioNetConf.sVarConfDesc[idx].u8VarRef == VarRef)
  3534  01E9  087D               	movf	pGetVafConf@idx,w
  3535  01EA  00F6               	movwf	??_pGetVafConf
  3536  01EB  01F7               	clrf	??_pGetVafConf+1
  3537  01EC  0876               	movf	??_pGetVafConf,w
  3538  01ED  00F0               	movwf	___wmul@multiplier
  3539  01EE  0877               	movf	??_pGetVafConf+1,w
  3540  01EF  00F1               	movwf	___wmul@multiplier+1
  3541  01F0  3003               	movlw	3
  3542  01F1  00F2               	movwf	___wmul@multiplicand
  3543  01F2  3000               	movlw	0
  3544  01F3  00F3               	movwf	___wmul@multiplicand+1
  3545  01F4  233F               	fcall	___wmul
  3546  01F5  0871               	movf	?___wmul+1,w
  3547  01F6  0085               	movwf	5
  3548  01F7  0870               	movf	?___wmul,w
  3549  01F8  0084               	movwf	4
  3550  01F9  30B5               	movlw	low (_sBioNetConf| (0+32768))
  3551  01FA  0784               	addwf	4,f
  3552  01FB  3083               	movlw	high (_sBioNetConf| (0+32768))
  3553  01FC  3D85               	addwfc	5,f
  3554  01FD  0800               	movf	0,w	;code access
  3555  01FE  067C               	xorwf	pGetVafConf@VarRef,w
  3556  01FF  1D03               	skipz
  3557  0200  2A1C               	goto	i1l1438
  3558                           
  3559                           ;Bio-Net.c: 454: {
  3560                           ;Bio-Net.c: 456: return ((struct VarConfDesc *)&sBioNetConf.sVarConfDesc[idx]);
  3561  0201  087D               	movf	pGetVafConf@idx,w
  3562  0202  00F6               	movwf	??_pGetVafConf
  3563  0203  01F7               	clrf	??_pGetVafConf+1
  3564  0204  0876               	movf	??_pGetVafConf,w
  3565  0205  00F0               	movwf	___wmul@multiplier
  3566  0206  0877               	movf	??_pGetVafConf+1,w
  3567  0207  00F1               	movwf	___wmul@multiplier+1
  3568  0208  3003               	movlw	3
  3569  0209  00F2               	movwf	___wmul@multiplicand
  3570  020A  3000               	movlw	0
  3571  020B  00F3               	movwf	___wmul@multiplicand+1
  3572  020C  233F               	fcall	___wmul
  3573  020D  30B5               	movlw	low (_sBioNetConf| (0+32768))
  3574  020E  00F8               	movwf	??_pGetVafConf+2
  3575  020F  3083               	movlw	high (_sBioNetConf| (0+32768))
  3576  0210  00F9               	movwf	??_pGetVafConf+3
  3577  0211  0870               	movf	?___wmul,w
  3578  0212  0778               	addwf	??_pGetVafConf+2,w
  3579  0213  00FA               	movwf	??_pGetVafConf+4
  3580  0214  0871               	movf	?___wmul+1,w
  3581  0215  3D79               	addwfc	??_pGetVafConf+3,w
  3582  0216  00FB               	movwf	??_pGetVafConf+5
  3583  0217  087A               	movf	??_pGetVafConf+4,w
  3584  0218  00F6               	movwf	?_pGetVafConf
  3585  0219  087B               	movf	??_pGetVafConf+5,w
  3586  021A  00F7               	movwf	?_pGetVafConf+1
  3587  021B  0008               	return
  3588  021C                     i1l1438:	
  3589  021C  3001               	movlw	1
  3590  021D  00F6               	movwf	??_pGetVafConf
  3591  021E  0876               	movf	??_pGetVafConf,w
  3592  021F  07FD               	addwf	pGetVafConf@idx,f
  3593  0220  3004               	movlw	4
  3594  0221  027D               	subwf	pGetVafConf@idx,w
  3595  0222  1C03               	skipc
  3596  0223  29E9               	goto	i1l1432
  3597  0224                     i1l1442:	
  3598                           
  3599                           ;Bio-Net.c: 457: }
  3600                           ;Bio-Net.c: 458: }
  3601                           ;Bio-Net.c: 460: return ((0));
  3602  0224  01F6               	clrf	?_pGetVafConf
  3603  0225  01F7               	clrf	?_pGetVafConf+1
  3604  0226  0008               	return
  3605  0227                     __end_of_pGetVafConf:	
  3606                           
  3607                           	psect	text20
  3608  02F3                     __ptext20:	
  3609 ;; *************** function _IsOKVarIsForUs *****************
  3610 ;; Defined at:
  3611 ;;		line 341 in file "Bio-Net.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  VarRef          1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  VarRef          1    8[COMMON] unsigned char 
  3616 ;;  VarIdx          1   10[COMMON] unsigned char 
  3617 ;;  IsManagedByO    1    9[COMMON] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1
  3627 ;;      Params:         0       0       0
  3628 ;;      Locals:         3       0       0
  3629 ;;      Temps:          2       0       0
  3630 ;;      Totals:         5       0       0
  3631 ;;Total ram usage:        5 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		___wmul
  3636 ;; This function is called by:
  3637 ;;		_BioNetRxInt
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           
  3642                           ;psect for function _IsOKVarIsForUs
  3643  02F3                     _IsOKVarIsForUs:	
  3644                           
  3645                           ;incstack = 0
  3646                           ; Regs used in _IsOKVarIsForUs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3647                           ;IsOKVarIsForUs@VarRef stored from wreg
  3648  02F3  00F8               	movwf	IsOKVarIsForUs@VarRef
  3649                           
  3650                           ;Bio-Net.c: 343: u8 VarIdx=0;
  3651  02F4  01FA               	clrf	IsOKVarIsForUs@VarIdx
  3652                           
  3653                           ;Bio-Net.c: 344: boolean IsManagedByOurself = 0;
  3654  02F5  01F9               	clrf	IsOKVarIsForUs@IsManagedByOurself
  3655                           
  3656                           ;Bio-Net.c: 346: VarRef&=0x7F;
  3657  02F6  307F               	movlw	127
  3658  02F7  00F6               	movwf	??_IsOKVarIsForUs
  3659  02F8  0876               	movf	??_IsOKVarIsForUs,w
  3660  02F9  05F8               	andwf	IsOKVarIsForUs@VarRef,f
  3661                           
  3662                           ;Bio-Net.c: 348: for (;VarIdx<4;VarIdx++)
  3663  02FA  3004               	movlw	4
  3664  02FB  027A               	subwf	IsOKVarIsForUs@VarIdx,w
  3665  02FC  1803               	btfsc	3,0
  3666  02FD  2B20               	goto	i1l1422
  3667  02FE                     i1l1414:	
  3668                           
  3669                           ;Bio-Net.c: 349: {
  3670                           ;Bio-Net.c: 351: if (sBioNetConf.sVarConfDesc[VarIdx].u8VarRef == VarRef)
  3671  02FE  087A               	movf	IsOKVarIsForUs@VarIdx,w
  3672  02FF  00F6               	movwf	??_IsOKVarIsForUs
  3673  0300  01F7               	clrf	??_IsOKVarIsForUs+1
  3674  0301  0876               	movf	??_IsOKVarIsForUs,w
  3675  0302  00F0               	movwf	___wmul@multiplier
  3676  0303  0877               	movf	??_IsOKVarIsForUs+1,w
  3677  0304  00F1               	movwf	___wmul@multiplier+1
  3678  0305  3003               	movlw	3
  3679  0306  00F2               	movwf	___wmul@multiplicand
  3680  0307  3000               	movlw	0
  3681  0308  00F3               	movwf	___wmul@multiplicand+1
  3682  0309  233F               	fcall	___wmul
  3683  030A  0871               	movf	?___wmul+1,w
  3684  030B  0085               	movwf	5
  3685  030C  0870               	movf	?___wmul,w
  3686  030D  0084               	movwf	4
  3687  030E  30B5               	movlw	low (_sBioNetConf| (0+32768))
  3688  030F  0784               	addwf	4,f
  3689  0310  3083               	movlw	high (_sBioNetConf| (0+32768))
  3690  0311  3D85               	addwfc	5,f
  3691  0312  0800               	movf	0,w	;code access
  3692  0313  0678               	xorwf	IsOKVarIsForUs@VarRef,w
  3693  0314  1D03               	skipz
  3694  0315  2B18               	goto	i1l1418
  3695                           
  3696                           ;Bio-Net.c: 352: {
  3697                           ;Bio-Net.c: 354: IsManagedByOurself=1;
  3698  0316  01F9               	clrf	IsOKVarIsForUs@IsManagedByOurself
  3699  0317  0AF9               	incf	IsOKVarIsForUs@IsManagedByOurself,f
  3700  0318                     i1l1418:	
  3701  0318  3001               	movlw	1
  3702  0319  00F6               	movwf	??_IsOKVarIsForUs
  3703  031A  0876               	movf	??_IsOKVarIsForUs,w
  3704  031B  07FA               	addwf	IsOKVarIsForUs@VarIdx,f
  3705  031C  3004               	movlw	4
  3706  031D  027A               	subwf	IsOKVarIsForUs@VarIdx,w
  3707  031E  1C03               	skipc
  3708  031F  2AFE               	goto	i1l1414
  3709  0320                     i1l1422:	
  3710                           
  3711                           ;Bio-Net.c: 356: }
  3712                           ;Bio-Net.c: 357: }
  3713                           ;Bio-Net.c: 359: return (IsManagedByOurself);
  3714  0320  0879               	movf	IsOKVarIsForUs@IsManagedByOurself,w
  3715  0321  0008               	return
  3716  0322                     __end_of_IsOKVarIsForUs:	
  3717                           
  3718                           	psect	text21
  3719  033F                     __ptext21:	
  3720 ;; *************** function ___wmul *****************
  3721 ;; Defined at:
  3722 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  multiplier      2    0[COMMON] unsigned int 
  3725 ;;  multiplicand    2    2[COMMON] unsigned int 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  product         2    4[COMMON] unsigned int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2    0[COMMON] unsigned int 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1
  3737 ;;      Params:         4       0       0
  3738 ;;      Locals:         2       0       0
  3739 ;;      Temps:          0       0       0
  3740 ;;      Totals:         6       0       0
  3741 ;;Total ram usage:        6 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_IsOKVarIsForUs
  3747 ;;		_pGetVafConf
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function ___wmul
  3753  033F                     ___wmul:	
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3757  033F  01F4               	clrf	___wmul@product
  3758  0340  01F5               	clrf	___wmul@product+1
  3759  0341                     i1l1336:	
  3760  0341  1C70               	btfss	___wmul@multiplier,0
  3761  0342  2B47               	goto	i1l462
  3762  0343  0872               	movf	___wmul@multiplicand,w
  3763  0344  07F4               	addwf	___wmul@product,f
  3764  0345  0873               	movf	___wmul@multiplicand+1,w
  3765  0346  3DF5               	addwfc	___wmul@product+1,f
  3766  0347                     i1l462:	
  3767  0347  3001               	movlw	1
  3768  0348                     u80_25:	
  3769  0348  35F2               	lslf	___wmul@multiplicand,f
  3770  0349  0DF3               	rlf	___wmul@multiplicand+1,f
  3771  034A  0B89               	decfsz	9,f
  3772  034B  2B48               	goto	u80_25
  3773  034C  3001               	movlw	1
  3774  034D                     u81_25:	
  3775  034D  36F1               	lsrf	___wmul@multiplier+1,f
  3776  034E  0CF0               	rrf	___wmul@multiplier,f
  3777  034F  0B89               	decfsz	9,f
  3778  0350  2B4D               	goto	u81_25
  3779  0351  0870               	movf	___wmul@multiplier,w
  3780  0352  0471               	iorwf	___wmul@multiplier+1,w
  3781  0353  1D03               	btfss	3,2
  3782  0354  2B41               	goto	i1l1336
  3783  0355  0875               	movf	___wmul@product+1,w
  3784  0356  00F1               	movwf	?___wmul+1
  3785  0357  0874               	movf	___wmul@product,w
  3786  0358  00F0               	movwf	?___wmul
  3787  0359  0008               	return
  3788  035A                     __end_of___wmul:	
  3789                           
  3790                           	psect	text22
  3791  02C2                     __ptext22:	
  3792 ;; *************** function _IsOKChecksum *****************
  3793 ;; Defined at:
  3794 ;;		line 395 in file "Bio-Net.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  u8SizeFrame     1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  u8SizeFrame     1    3[COMMON] unsigned char 
  3799 ;;  index           1    4[COMMON] unsigned char 
  3800 ;;  u8Check         1    2[COMMON] unsigned char 
  3801 ;;  u8CheckCpl      1    1[COMMON] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      unsigned char 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1
  3811 ;;      Params:         0       0       0
  3812 ;;      Locals:         4       0       0
  3813 ;;      Temps:          1       0       0
  3814 ;;      Totals:         5       0       0
  3815 ;;Total ram usage:        5 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_BioNetRxInt
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _IsOKChecksum
  3826  02C2                     _IsOKChecksum:	
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _IsOKChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3830                           ;IsOKChecksum@u8SizeFrame stored from wreg
  3831  02C2  00F3               	movwf	IsOKChecksum@u8SizeFrame
  3832                           
  3833                           ;Bio-Net.c: 397: u8 u8Check=0;
  3834  02C3  01F2               	clrf	IsOKChecksum@u8Check
  3835                           
  3836                           ;Bio-Net.c: 398: u8 u8CheckCpl;
  3837                           ;Bio-Net.c: 399: u8 index=0;
  3838  02C4  01F4               	clrf	IsOKChecksum@index
  3839                           
  3840                           ;Bio-Net.c: 402: if (u8SizeFrame==1) return(0);
  3841  02C5  0373               	decf	IsOKChecksum@u8SizeFrame,w
  3842  02C6  1D03               	btfss	3,2
  3843  02C7  2ACA               	goto	i1l1454
  3844  02C8  3000               	movlw	0
  3845  02C9  0008               	return
  3846  02CA                     i1l1454:	
  3847                           
  3848                           ;Bio-Net.c: 403: if (u8SizeFrame > 4) return(0);
  3849  02CA  3005               	movlw	5
  3850  02CB  0273               	subwf	IsOKChecksum@u8SizeFrame,w
  3851  02CC  1C03               	skipc
  3852  02CD  2AD0               	goto	i1l1460
  3853  02CE  3000               	movlw	0
  3854  02CF  0008               	return
  3855  02D0                     i1l1460:	
  3856                           
  3857                           ;Bio-Net.c: 406: u8SizeFrame--;
  3858  02D0  3001               	movlw	1
  3859  02D1  02F3               	subwf	IsOKChecksum@u8SizeFrame,f
  3860  02D2                     i1l1466:	
  3861                           ;Bio-Net.c: 408: for (; index < u8SizeFrame ; index++)
  3862                           
  3863  02D2  0873               	movf	IsOKChecksum@u8SizeFrame,w
  3864  02D3  0274               	subwf	IsOKChecksum@index,w
  3865  02D4  1803               	btfsc	3,0
  3866  02D5  2AE3               	goto	i1l1468
  3867                           
  3868                           ;Bio-Net.c: 409: {
  3869                           ;Bio-Net.c: 410: u8Check+=tu8BioNetBuff[index];
  3870  02D6  0874               	movf	IsOKChecksum@index,w
  3871  02D7  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  3872  02D8  0086               	movwf	6
  3873  02D9  0187               	clrf	7
  3874  02DA  0801               	movf	1,w
  3875  02DB  00F0               	movwf	??_IsOKChecksum
  3876  02DC  0870               	movf	??_IsOKChecksum,w
  3877  02DD  07F2               	addwf	IsOKChecksum@u8Check,f
  3878  02DE  3001               	movlw	1
  3879  02DF  00F0               	movwf	??_IsOKChecksum
  3880  02E0  0870               	movf	??_IsOKChecksum,w
  3881  02E1  07F4               	addwf	IsOKChecksum@index,f
  3882  02E2  2AD2               	goto	i1l1466
  3883  02E3                     i1l1468:	
  3884                           
  3885                           ;Bio-Net.c: 411: }
  3886                           ;Bio-Net.c: 413: u8CheckCpl=~tu8BioNetBuff[index];
  3887  02E3  0874               	movf	IsOKChecksum@index,w
  3888  02E4  3E3A               	addlw	(low (_tu8BioNetBuff| 0))& (0+255)
  3889  02E5  0086               	movwf	6
  3890  02E6  0187               	clrf	7
  3891  02E7  0901               	comf	1,w
  3892  02E8  00F0               	movwf	??_IsOKChecksum
  3893  02E9  0870               	movf	??_IsOKChecksum,w
  3894  02EA  00F1               	movwf	IsOKChecksum@u8CheckCpl
  3895                           
  3896                           ;Bio-Net.c: 415: if (u8Check == u8CheckCpl)
  3897  02EB  0872               	movf	IsOKChecksum@u8Check,w
  3898  02EC  0671               	xorwf	IsOKChecksum@u8CheckCpl,w
  3899  02ED  1D03               	skipz
  3900  02EE  2AF1               	goto	i1l1478
  3901                           
  3902                           ;Bio-Net.c: 416: {
  3903                           ;Bio-Net.c: 418: return(1);
  3904  02EF  3001               	movlw	1
  3905                           
  3906                           ;Bio-Net.c: 419: }
  3907  02F0  0008               	return
  3908  02F1                     i1l1478:	
  3909                           
  3910                           ;Bio-Net.c: 420: else
  3911                           ;Bio-Net.c: 421: {
  3912                           ;Bio-Net.c: 423: return (0);
  3913  02F1  3000               	movlw	0
  3914  02F2  0008               	return
  3915  02F3                     __end_of_IsOKChecksum:	
  3916  007E                     btemp	set	126	;btemp
  3917  007E                     int$flags	set	126
  3918  007E                     wtemp	set	126
  3919  007E                     wtemp0	set	126
  3920  0080                     wtemp1	set	128
  3921  0082                     wtemp2	set	130
  3922  0084                     wtemp3	set	132
  3923  0086                     wtemp4	set	134
  3924  0088                     wtemp5	set	136
  3925  007F                     wtemp6	set	127
  3926  007E                     ttemp	set	126
  3927  007E                     ttemp0	set	126
  3928  0081                     ttemp1	set	129
  3929  0084                     ttemp2	set	132
  3930  0087                     ttemp3	set	135
  3931  007F                     ttemp4	set	127
  3932  007E                     ltemp	set	126
  3933  007E                     ltemp0	set	126
  3934  0082                     ltemp1	set	130
  3935  0086                     ltemp2	set	134
  3936  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      59
    BANK1            32      0       0

Pointer List with Targets:

    IsOk_CallBackWrite@pu8Buffer	PTR unsigned char  size(1) Largest target is 4
		 -> tu8BioNetBuff(BANK0[4]), 

    IsOk_CallBackRead@pu8Buffer	PTR unsigned char  size(1) Largest target is 4
		 -> tu8BioNetBuff(BANK0[4]), 

    sp__pGetVafConf	PTR struct VarConfDesc size(2) Largest target is 13
		 -> sBioNetConf.sVarConfDesc(CODE[12]), sBioNetConf(CODE[13]), NULL(NULL[0]), 

    pVarConfDes	PTR struct VarConfDesc size(2) Largest target is 13
		 -> sBioNetConf.sVarConfDesc(CODE[12]), sBioNetConf(CODE[13]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _BioNetRxInt->_pGetVafConf
    _pGetVafConf->___wmul
    _IsOKVarIsForUs->___wmul

Critical Paths under _main in BANK0

    _main->_BioNetProcess
    _DC22_AnaProcess->_Hdw_AdcReadAnaValue
    _BioNetProcess->_CalculChecksumAndSend
    _BioNetProcess->_IsOk_CallBackRead

Critical Paths under _isr in BANK0

    _isr->_BioNetRxInt

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    10      4     905
                                             15 BANK0     14    10      4
                         _BioNetInit
                      _BioNetProcess
                    _DC22_AnaProcess
                        _DC24HdwInit
                        _HdwUartInit
                        _Hdw_AdcInit
 ---------------------------------------------------------------------------------
 (1) _Hdw_AdcInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HdwUartInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC24HdwInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC22_AnaProcess                                      1     1      0      47
                                             13 BANK0      1     1      0
                 _Hdw_AdcIsOkReadAna
                _Hdw_AdcReadAnaValue
            _Hdw_AdcStartReadChannel
 ---------------------------------------------------------------------------------
 (2) _Hdw_AdcStartReadChannel                              2     2      0      22
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Hdw_AdcReadAnaValue                                  6     4      2      25
                                              7 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Hdw_AdcIsOkReadAna                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BioNetProcess                                        4     4      0     601
                                             11 BANK0      4     4      0
                      _BioNetRazFlag
              _CalculChecksumAndSend
                  _IsOk_CallBackRead
                 _IsOk_CallBackWrite
 ---------------------------------------------------------------------------------
 (2) _IsOk_CallBackWrite                                   3     2      1      77
                                              7 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _IsOk_CallBackRead                                    4     3      1     253
                                              7 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _CalculChecksumAndSend                                4     4      0     160
                                              7 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _BioNetRazFlag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BioNetInit                                           1     1      0       0
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0    1385
                                              5 BANK0      2     2      0
                        _BioNetRxInt
                        _BioNetTxInt
                         _DC24It10ms
                    i1_BioNetRazFlag
 ---------------------------------------------------------------------------------
 (4) _DC24It10ms                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BioNetTxInt                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _BioNetRxInt                                          5     5      0    1385
                                              0 BANK0      5     5      0
                       _IsOKChecksum
                     _IsOKVarIsForUs
                        _pGetVafConf
                    i1_BioNetRazFlag
 ---------------------------------------------------------------------------------
 (4) i1_BioNetRazFlag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pGetVafConf                                          8     8      0     522
                                              6 COMMON     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _IsOKVarIsForUs                                       5     5      0     525
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _IsOKChecksum                                         5     5      0     182
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BioNetInit
   _BioNetProcess
     _BioNetRazFlag
     _CalculChecksumAndSend
     _IsOk_CallBackRead
     _IsOk_CallBackWrite
   _DC22_AnaProcess
     _Hdw_AdcIsOkReadAna
     _Hdw_AdcReadAnaValue
     _Hdw_AdcStartReadChannel
   _DC24HdwInit
   _HdwUartInit
   _Hdw_AdcInit

 _isr (ROOT)
   _BioNetRxInt
     _IsOKChecksum
     _IsOKVarIsForUs
       ___wmul
     _pGetVafConf
       ___wmul
     i1_BioNetRazFlag
   _BioNetTxInt
   _DC24It10ms
   i1_BioNetRazFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      49       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 23 16:02:09 2016

IsOKVarIsForUs@IsManagedByOurself 0079                       __CFG_CP$OFF 0000               ___wmul@multiplicand 0072  
                     main@ValPort 005A                               _PS0 04A8                               _PS1 04A9  
                             _PS2 04AA                      __CFG_CPD$OFF 0000                               _PSA 04AB  
                             u995 039C                               _isr 0004    __size_of_CalculChecksumAndSend 0032  
                    __CFG_BORV$LO 0000                               wreg 0009     __end_of_CalculChecksumAndSend 0291  
        ?_Hdw_AdcStartReadChannel 0070                        _BioNetInit 03A6                   ?_IsOKVarIsForUs 0070  
                    __CFG_LVP$OFF 0000               __end_of_Hdw_AdcInit 03CF                              l1360 0268  
                            l1362 0279                              l1380 02A1                              l1366 0285  
                            l1392 02BF                              l1384 02A7                              l1640 006D  
                            l1712 0243                              l1704 0231                              l1394 02C0  
                            l1802 01B1                              l1388 02B3                              l1636 0064  
                            l1820 01D3                              l1812 01C9                              l1670 00C8  
                            l1662 00A6                              l1638 0068                              l1646 0075  
                            l1494 03E4                              l1718 024F                              l1822 01D4  
                            l1806 01B8                              l1814 01CA                              l1648 0076  
                            l1682 00E4                              l1658 009F        __end_of_IsOk_CallBackWrite 03F2  
                            l1676 00DB                              l1828 01DE                              l1790 01A0  
                            l1794 01A5                              l1778 018C                              l1796 01A6  
                            ?_isr 0070                              _ADGO 04E9                              _ADON 04E8  
                            _BRGH 0CF2                              _CREN 0CEC                              u1015 032D  
                            u1535 01C2                              _RCIE 048D                              _RCIF 008D  
                            i1l68 0044                              _OERR 0CE9                              _SPEN 0CEF  
        __size_ofi1_BioNetRazFlag 0008                              _TXIE 048C                              _TXEN 0CF5  
                            _TXIF 008C                              _SYNC 0CF4                      __CFG_WRT$OFF 0000  
                   _bRPMLevelPrev 002D                              _main 017F              __size_of_pGetVafConf 0044  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                     _tu8BioNetBuff 003A                     __CFG_BOREN$ON 0000  
                            ltemp 007E          IsOk_CallBackWrite@Result 0046                   _DC22_AnaProcess 0227  
                            start 0049                              ttemp 007E    Hdw_AdcStartReadChannel@Channel 0046  
                            wtemp 007E                     __CFG_IESO$OFF 0000               __end_of_HdwUartInit 0397  
                     _BioNetRxInt 00EF                       _BioNetTxInt 0370                             ??_isr 0043  
                   __CFG_PLLEN$ON 0000                             ?_main 004D                             _BRG16 0CFB  
                   __CFG_WDTE$OFF 0000                             _ANSA0 0C60                             _ANSA1 0C61  
                           _ANSA2 0C62                             i1l170 0125                             i1l186 0382  
                           i1l462 0347                             _RCREG 0199                             _PORTA 000C  
                           u80_25 0348                             u81_25 034D                             _TXREG 019A  
              _Hdw_AdcIsOkReadAna 03DF                    __CFG_FCMEN$OFF 0000                             _u8RPM 0036  
             ?_Hdw_AdcIsOkReadAna 0070                      ??_DC24It10ms 0070                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F      __size_of_Hdw_AdcReadAnaValue 001D                    __CFG_MCLRE$OFF 0000  
                 __initialization 004A                      __end_of_main 01E3              ??_Hdw_AdcIsOkReadAna 0045  
           __size_of_IsOKChecksum 0031                   main@u16Compteur 0056                            ??_main 0051  
 __end_of_Hdw_AdcStartReadChannel 03A6                __end_of_DC24It10ms 0370              IsOKVarIsForUs@VarIdx 007A  
                     _Hdw_AdcInit 03C2              IsOKVarIsForUs@VarRef 0078                 _IsOk_CallBackRead 0291  
                     ?_BioNetInit 0070      CalculChecksumAndSend@u8Check 0046                            _ADCON0 009D  
                          _ADCON1 009E                   main@u16TimerBas 0052                ?_IsOk_CallBackRead 0045  
                          _ADRESH 009C                            _ADRESL 009B           __end_of_DC22_AnaProcess 025F  
                          i1l1422 0320                            i1l1414 02FE                            i1l1336 0341  
                          i1l1432 01E9                            i1l1418 0318                            i1l1442 0224  
                          i1l1460 02D0                            i1l1454 02CA                            i1l1438 021C  
                          i1l1552 0111                            i1l1466 02D2                            i1l1570 012E  
                          i1l1468 02E3                            i1l1572 0134                            i1l1740 001D  
                          i1l1478 02F1                            i1l1582 0148                            i1l1734 0017  
                          i1l1568 012C                            i1l1752 002D                   _bNetworkCommand 0028  
                          i1l1594 0175                            i1l1596 0176                            i1l1758 003A  
                          _INTCON 000B                       _HdwUartInit 0385                            _OSCCON 0099  
                          _TMR0IE 005D                            _TMR0IF 005A                            _TMR0CS 04AD  
                          _SPBRGH 019C                            _SPBRGL 019B                        _Tempo500ms 0026  
                          _TRISA0 0460                            _TRISA2 0462               ??_IsOk_CallBackRead 0046  
                  __CFG_PWRTE$OFF 0000            __size_of_BioNetRazFlag 0008                      _IsOKChecksum 02C2  
               ??i1_BioNetRazFlag 0070                   _bNetworkWriteOK 002B            __size_of_BioNetProcess 009C  
      IsOk_CallBackRead@pu8Buffer 0045                            ___wmul 033F                    __CFG_STVREN$ON 0000  
                      _u8Pedalage 0033            IsOKChecksum@u8CheckCpl 0071         __end_of_IsOk_CallBackRead 02C2  
                   ??_DC24HdwInit 0045           __end_of__initialization 0050                    __pcstackCOMMON 0070  
             __size_of_BioNetInit 000F                  ??_IsOKVarIsForUs 0076                     _BioNetRazFlag 03CF  
                   _BioNetProcess 0053                    _eDC22_AnaState 0030                 pGetVafConf@VarRef 007C  
                ?_DC22_AnaProcess 0070                        __pbssBANK0 0020               __end_of_DC24HdwInit 03F5  
__size_of_Hdw_AdcStartReadChannel 000F                        __pmaintext 017F                _IsOk_CallBackWrite 03EC  
                         ?___wmul 0070                      ?_BioNetRxInt 0070                      ?_BioNetTxInt 0070  
                      __pintentry 0004                  main@u16TimerHaut 0054               ?_IsOk_CallBackWrite 0045  
             _Hdw_AdcReadAnaValue 0322                    ?_BioNetRazFlag 0070        __size_of_IsOk_CallBackRead 0031  
                  ?_BioNetProcess 0070             _CalculChecksumAndSend 025F                           _RXDTSEL 08EF  
                         _TXCKSEL 08EA                     ??_pGetVafConf 0076              ??_IsOk_CallBackWrite 0046  
            ?_Hdw_AdcReadAnaValue 0045                   __size_of___wmul 001B                           __ptext1 03C2  
                         __ptext2 0385                           __ptext3 03F2                           __ptext4 0227  
                         __ptext5 0397                           __ptext6 0322                           __ptext7 03DF  
                         __ptext8 0053                           __ptext9 03EC        IsOk_CallBackWrite@u8VarRef 0070  
                    ?_Hdw_AdcInit 0070                     _eBioNetStatus 002F                      __size_of_isr 0045  
                    ??_BioNetInit 0045                       _DC24HdwInit 03F2                           clrloop0 03E7  
                 i1_BioNetRazFlag 03D7              end_of_initialization 0050                      ?_HdwUartInit 0070  
           ??_Hdw_AdcReadAnaValue 0047          BioNetRxInt@u8TxFrameSize 0041                       _u8RxNoDelay 0038  
             __end_of_pGetVafConf 0227               __end_of_sBioNetConf 03C2                      __pstringtext 03B5  
              __end_of_BioNetInit 03B5       __size_of_Hdw_AdcIsOkReadAna 0007                   ??_BioNetRazFlag 0045  
                 ??_BioNetProcess 0049       IsOk_CallBackWrite@pu8Buffer 0045                  __CFG_FOSC$INTOSC 0000  
          ?_CalculChecksumAndSend 0070        CalculChecksumAndSend@index 0048           _Hdw_AdcStartReadChannel 0397  
         IsOKChecksum@u8SizeFrame 0073                   _u8Prescaler10ms 0035  CalculChecksumAndSend@u8SizeFrame 0047  
                  __end_of___wmul 035A              __size_of_BioNetRxInt 0090              __size_of_BioNetTxInt 0015  
         __end_ofi1_BioNetRazFlag 03DF               start_initialization 004A                       __end_of_isr 0049  
       IsOk_CallBackRead@u8VarRef 0048                       _pGetVafConf 01E3                _bPedalageLevelPrev 002C  
                   _bIsWriteFrame 0027                       _sBioNetConf 03B5                    _bNetworkReadOK 002A  
                        ??___wmul 0074                         _u8IndexRx 0031                         _u8IndexTx 0032  
                       ___latbits 0000                     __pcstackBANK0 003E              __size_of_Hdw_AdcInit 000D  
       ??_Hdw_AdcStartReadChannel 0045               IsOKChecksum@u8Check 0072              __size_of_HdwUartInit 0012  
        __size_of_DC22_AnaProcess 0038                       _pVarConfDes 0020                  ?i1_BioNetRazFlag 0070  
                    ?_DC24HdwInit 0070           __size_of_IsOKVarIsForUs 002F                        _DC24It10ms 035A  
                 _bRazFlagAllowed 002E                 _bNetworkCommandOK 0029       __size_of_IsOk_CallBackWrite 0006  
                  ___wmul@product 0074                         clear_ram0 03E6                     ?_IsOKChecksum 0070  
                   _u8PedalageCpt 0034           IsOk_CallBackRead@Result 0047                    _u16CourantBatt 0022  
               ___wmul@multiplier 0070           ??_CalculChecksumAndSend 0045              BioNetRxInt@u8CharBuf 0042  
     __end_of_Hdw_AdcReadAnaValue 033F                    pGetVafConf@idx 007D                    ??_IsOKChecksum 0070  
                        _u8RPMCpt 0037        __end_of_Hdw_AdcIsOkReadAna 03E6      BioNetProcess@eBioNetStatusRx 004C  
               ??_DC22_AnaProcess 004B             __end_of_BioNetRazFlag 03D7             __end_of_BioNetProcess 00EF  
              _u16TensionBatterie 0024                          __ptext10 0291                          __ptext11 025F  
                        __ptext20 02F3                          __ptext12 03CF                          __ptext21 033F  
                        __ptext13 03A6                          __ptext22 02C2                          __ptext15 035A  
                        __ptext16 0370                          __ptext17 00EF                          __ptext18 03D7  
                        __ptext19 01E3                      ?_pGetVafConf 0076                       ?_DC24It10ms 0070  
                   __size_of_main 0064                     _u8TxFrameSize 0039                     ??_BioNetRxInt 003E  
                   ??_BioNetTxInt 0070                          int$flags 007E                          main@argc 004D  
                        main@argv 004F                    _IsOKVarIsForUs 02F3                          intlevel1 0000  
            __size_of_DC24HdwInit 0003           Hdw_AdcReadAnaValue@temp 0049                 IsOKChecksum@index 0074  
               __CFG_CLKOUTEN$OFF 0000               __size_of_DC24It10ms 0016                     ??_Hdw_AdcInit 0045  
             __end_of_BioNetRxInt 017F               __end_of_BioNetTxInt 0385              __end_of_IsOKChecksum 02F3  
          __end_of_IsOKVarIsForUs 0322                     ??_HdwUartInit 0045            main@u16CompteurDiv1000 0058  
