Version 3.2 HI-TECH Software Intermediate Code
"43 Bio-NetApp.h
[s S6 `uc 1 `uc 1 `uc 1 ]
[n S6 VarConfDesc u8VarRef u8VarCycle u8VarTypeSize ]
"49
[s S7 `S6 -> 4 `i `uc 1 ]
[n S7 BioNetConf sVarConfDesc u8VarNumber ]
"27 Bio-NetApp.c
[c E197 0 1 2 3 .. ]
[n E197 BioNetStatus INIT RUN STOP ERROR  ]
"28 DC22M_GlobalVar.h
[v _u16CourantBatt `ui ~T0 @X0 0 e ]
"18
[v _u8Pedalage `uc ~T0 @X0 0 e ]
"22
[v _u8RPM `uc ~T0 @X0 0 e ]
"27
[v _u16TensionBatterie `ui ~T0 @X0 0 e ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;Type.h: 15: typedef unsigned long u32;
[; ;Type.h: 16: typedef unsigned int u16;
[; ;Type.h: 17: typedef int s16;
[; ;Type.h: 18: typedef unsigned char u8;
[; ;Type.h: 19: typedef char s8;
[; ;Type.h: 20: typedef unsigned char boolean;
[; ;Bio-NetApp.h: 43: typedef struct VarConfDesc{
[; ;Bio-NetApp.h: 44: u8 u8VarRef;
[; ;Bio-NetApp.h: 45: u8 u8VarCycle;
[; ;Bio-NetApp.h: 46: u8 u8VarTypeSize;
[; ;Bio-NetApp.h: 47: };
[; ;Bio-NetApp.h: 49: typedef struct BioNetConf{
[; ;Bio-NetApp.h: 50: struct VarConfDesc sVarConfDesc[4];
[; ;Bio-NetApp.h: 51: u8 u8VarNumber;
[; ;Bio-NetApp.h: 52: };
[; ;Bio-NetApp.h: 54: enum BioNetStatus {
[; ;Bio-NetApp.h: 55: INIT,
[; ;Bio-NetApp.h: 56: RUN,
[; ;Bio-NetApp.h: 57: STOP,
[; ;Bio-NetApp.h: 58: ERROR
[; ;Bio-NetApp.h: 59: };
[; ;Bio-NetApp.h: 61: extern const struct BioNetConf sBioNetConf;
[; ;Bio-NetApp.h: 62: extern enum BioNetStatus eBioNetStatus;
[; ;Bio-NetApp.h: 63: extern u8 tu8BioNetBuff[];
[; ;Bio-NetApp.h: 65: boolean IsOk_CallBackRead(u8 u8VarNumber, u8* pu8Buffer);
[; ;Bio-NetApp.h: 66: boolean IsOk_CallBackWrite(u8 u8VarNumber, u8* pu8Buffer);
[; ;DC22M_GlobalVar.h: 16: extern u8 Tempo500ms;
[; ;DC22M_GlobalVar.h: 18: extern u8 u8Pedalage;
[; ;DC22M_GlobalVar.h: 19: extern u8 u8PedalageCpt;
[; ;DC22M_GlobalVar.h: 20: extern boolean bPedalageLevelPrev;
[; ;DC22M_GlobalVar.h: 22: extern u8 u8RPM;
[; ;DC22M_GlobalVar.h: 23: extern u8 u8RPMCpt;
[; ;DC22M_GlobalVar.h: 24: extern boolean bRPMLevelPrev;
[; ;DC22M_GlobalVar.h: 27: extern u16 u16TensionBatterie;
[; ;DC22M_GlobalVar.h: 28: extern u16 u16CourantBatt;
"20 Bio-NetApp.c
[v _sBioNetConf `CS7 ~T0 @X0 1 e ]
[i _sBioNetConf
:U ..
:U ..
:U ..
:U ..
"21
-> -> 2 `i `uc
-> -> 255 `i `uc
-> + -> 2 `i -> 16 `i `uc
..
:U ..
"22
-> -> 7 `i `uc
-> -> 255 `i `uc
-> + -> 1 `i -> 16 `i `uc
..
:U ..
"23
-> -> 8 `i `uc
-> -> 5 `i `uc
-> + -> 1 `i -> 16 `i `uc
..
:U ..
"24
-> -> 15 `i `uc
-> -> 255 `i `uc
-> + -> 2 `i -> 16 `i `uc
..
..
"25
-> -> 4 `i `uc
..
..
]
[; ;Bio-NetApp.c: 20: const struct BioNetConf sBioNetConf = {
[; ;Bio-NetApp.c: 21: 2,255,2+0x10,
[; ;Bio-NetApp.c: 22: 7,255,1+0x10,
[; ;Bio-NetApp.c: 23: 8,5,1+0x10,
[; ;Bio-NetApp.c: 24: 15,255,2+0x10,
[; ;Bio-NetApp.c: 25: 4};
"27
[v _eBioNetStatus `E197 ~T0 @X0 1 e ]
[i _eBioNetStatus
. `E197 0
]
[; ;Bio-NetApp.c: 27: enum BioNetStatus eBioNetStatus= INIT;
"38
[v _IsOk_CallBackRead `(uc ~T0 @X0 1 ef2`uc`*uc ]
"39
{
[; ;Bio-NetApp.c: 38: boolean IsOk_CallBackRead(u8 u8VarRef, u8* pu8Buffer)
[; ;Bio-NetApp.c: 39: {
[e :U _IsOk_CallBackRead ]
"38
[v _u8VarRef `uc ~T0 @X0 1 r1 ]
[v _pu8Buffer `*uc ~T0 @X0 1 r2 ]
"39
[f ]
"40
[v _Result `uc ~T0 @X0 1 a ]
[; ;Bio-NetApp.c: 40: boolean Result=1;
[e = _Result -> -> 1 `i `uc ]
[; ;Bio-NetApp.c: 42: if (u8VarRef == 2)
"42
[e $ ! == -> _u8VarRef `i -> 2 `i 9  ]
[; ;Bio-NetApp.c: 43: {
"43
{
[; ;Bio-NetApp.c: 45: *(u16 *)pu8Buffer = u16CourantBatt;
"45
[e = *U -> _pu8Buffer `*ui _u16CourantBatt ]
"46
}
[; ;Bio-NetApp.c: 46: }
[e $U 10  ]
"47
[e :U 9 ]
[; ;Bio-NetApp.c: 47: else if (u8VarRef == 7)
[e $ ! == -> _u8VarRef `i -> 7 `i 11  ]
[; ;Bio-NetApp.c: 48: {
"48
{
[; ;Bio-NetApp.c: 50: *pu8Buffer = u8Pedalage;
"50
[e = *U _pu8Buffer _u8Pedalage ]
"51
}
[; ;Bio-NetApp.c: 51: }
[e $U 12  ]
"52
[e :U 11 ]
[; ;Bio-NetApp.c: 52: else if (u8VarRef == 8)
[e $ ! == -> _u8VarRef `i -> 8 `i 13  ]
[; ;Bio-NetApp.c: 53: {
"53
{
[; ;Bio-NetApp.c: 55: *pu8Buffer = u8RPM;
"55
[e = *U _pu8Buffer _u8RPM ]
"56
}
[; ;Bio-NetApp.c: 56: }
[e $U 14  ]
"57
[e :U 13 ]
[; ;Bio-NetApp.c: 57: else if (u8VarRef == 15)
[e $ ! == -> _u8VarRef `i -> 15 `i 15  ]
[; ;Bio-NetApp.c: 58: {
"58
{
[; ;Bio-NetApp.c: 60: *(u16 *)pu8Buffer = u16TensionBatterie;
"60
[e = *U -> _pu8Buffer `*ui _u16TensionBatterie ]
"61
}
[; ;Bio-NetApp.c: 61: }
[e $U 16  ]
"62
[e :U 15 ]
[; ;Bio-NetApp.c: 62: else
[; ;Bio-NetApp.c: 63: {
"63
{
[; ;Bio-NetApp.c: 65: Result=0;
"65
[e = _Result -> -> 0 `i `uc ]
"66
}
[e :U 16 ]
[e :U 14 ]
[e :U 12 ]
[e :U 10 ]
[; ;Bio-NetApp.c: 66: }
[; ;Bio-NetApp.c: 69: return (Result);
"69
[e ) _Result ]
[e $UE 8  ]
[; ;Bio-NetApp.c: 70: };
"70
[e :UE 8 ]
}
"80
[v _IsOk_CallBackWrite `(uc ~T0 @X0 1 ef2`uc`*uc ]
"81
{
[; ;Bio-NetApp.c: 80: boolean IsOk_CallBackWrite(u8 u8VarRef, u8* pu8Buffer)
[; ;Bio-NetApp.c: 81: {
[e :U _IsOk_CallBackWrite ]
"80
[v _u8VarRef `uc ~T0 @X0 1 r1 ]
[v _pu8Buffer `*uc ~T0 @X0 1 r2 ]
"81
[f ]
"82
[v _Result `uc ~T0 @X0 1 a ]
[; ;Bio-NetApp.c: 82: boolean Result=1;
[e = _Result -> -> 1 `i `uc ]
[; ;Bio-NetApp.c: 85: Result=0;
"85
[e = _Result -> -> 0 `i `uc ]
[; ;Bio-NetApp.c: 87: return (Result);
"87
[e ) _Result ]
[e $UE 17  ]
[; ;Bio-NetApp.c: 88: };
"88
[e :UE 17 ]
}
